/*********************************************************************
* Copyright (C) 2005 by Progress Software Corporation. All rights    *
* reserved.  Prior versions of this work may contain portions        *
* contributed by participants of Possenet.                           *
*                                                                    *
*********************************************************************/

TRIGGER PROCEDURE FOR DELETE OF gsc_deploy_dataset .

/* Created automatically using ERwin ICF Trigger template db/af/erw/afercustrg.i
   Do not change manually. Customisations to triggers should be placed in separate
   include files pulled into the trigger. ICF auto generates write trigger custom
   include files. Delete or create customisation include files need to be created
   manually. Be sure to put the hook in ERwin directly so as not to have you changes
   overwritten.
   User defined Macro (UDP) Summary (case sensitive)
   gsc_deploy_dataset           Expands to full table name, e.g. gsm_user
   %TableFLA            Expands to table unique code, e.g. gsmus
   %TableObj            If blank or not defined expands to table_obj with no prefix (framework standard)
                        If defined, uses this field as the object field
                        If set to "none" then indicates table does not have an object field
   XYZ                  Do not define so we can compare against an empty string

   See docs for explanation of replication macros 
*/   

&SCOPED-DEFINE TRIGGER_TABLE gsc_deploy_dataset
&SCOPED-DEFINE TRIGGER_FLA gscdd
&SCOPED-DEFINE TRIGGER_OBJ deploy_dataset_obj


DEFINE BUFFER lb_table FOR gsc_deploy_dataset.      /* Used for recursive relationships */
DEFINE BUFFER lb1_table FOR gsc_deploy_dataset.     /* Used for lock upgrades */

DEFINE BUFFER o_gsc_deploy_dataset FOR gsc_deploy_dataset.

/* Standard top of DELETE trigger code */
{af/sup/aftrigtopd.i}

  




/* Generated by ICF ERwin Template */
/* gsc_deploy_dataset is included in gsc_package_dataset ON PARENT DELETE CASCADE */
&IF DEFINED(lbe_package_dataset) = 0 &THEN
  DEFINE BUFFER lbe_package_dataset FOR gsc_package_dataset.
  &GLOBAL-DEFINE lbe_package_dataset yes
&ENDIF
FOR EACH gsc_package_dataset NO-LOCK
   WHERE gsc_package_dataset.deploy_dataset_obj = gsc_deploy_dataset.deploy_dataset_obj
   ON STOP UNDO, RETURN ERROR "AF^104^gscddtrigd.p^delete gsc_package_dataset":U:
    FIND FIRST lbe_package_dataset EXCLUSIVE-LOCK
         WHERE ROWID(lbe_package_dataset) = ROWID(gsc_package_dataset)
         NO-ERROR.
    IF AVAILABLE lbe_package_dataset THEN
      DO:
        {af/sup/afvalidtrg.i &action = "DELETE" &table = "lbe_package_dataset"}
      END.
END.





/* Generated by ICF ERwin Template */
/* gsc_deploy_dataset generated gst_dataset_file ON PARENT DELETE CASCADE */
&IF DEFINED(lbe_dataset_file) = 0 &THEN
  DEFINE BUFFER lbe_dataset_file FOR gst_dataset_file.
  &GLOBAL-DEFINE lbe_dataset_file yes
&ENDIF
FOR EACH gst_dataset_file NO-LOCK
   WHERE gst_dataset_file.deploy_dataset_obj = gsc_deploy_dataset.deploy_dataset_obj
   ON STOP UNDO, RETURN ERROR "AF^104^gscddtrigd.p^delete gst_dataset_file":U:
    FIND FIRST lbe_dataset_file EXCLUSIVE-LOCK
         WHERE ROWID(lbe_dataset_file) = ROWID(gst_dataset_file)
         NO-ERROR.
    IF AVAILABLE lbe_dataset_file THEN
      DO:
        {af/sup/afvalidtrg.i &action = "DELETE" &table = "lbe_dataset_file"}
      END.
END.





/* Generated by ICF ERwin Template */
/* gsc_deploy_dataset includes gsc_dataset_entity ON PARENT DELETE CASCADE */
&IF DEFINED(lbe_dataset_entity) = 0 &THEN
  DEFINE BUFFER lbe_dataset_entity FOR gsc_dataset_entity.
  &GLOBAL-DEFINE lbe_dataset_entity yes
&ENDIF
FOR EACH gsc_dataset_entity NO-LOCK
   WHERE gsc_dataset_entity.deploy_dataset_obj = gsc_deploy_dataset.deploy_dataset_obj
   ON STOP UNDO, RETURN ERROR "AF^104^gscddtrigd.p^delete gsc_dataset_entity":U:
    FIND FIRST lbe_dataset_entity EXCLUSIVE-LOCK
         WHERE ROWID(lbe_dataset_entity) = ROWID(gsc_dataset_entity)
         NO-ERROR.
    IF AVAILABLE lbe_dataset_entity THEN
      DO:
        {af/sup/afvalidtrg.i &action = "DELETE" &table = "lbe_dataset_entity"}
      END.
END.














/* Update Audit Log */
IF CAN-FIND(FIRST gsc_entity_mnemonic
            WHERE gsc_entity_mnemonic.entity_mnemonic = 'gscdd':U
              AND gsc_entity_mnemonic.auditing_enabled = YES) THEN
  RUN af/app/afauditlgp.p (INPUT "DELETE":U, INPUT "gscdd":U, INPUT BUFFER gsc_deploy_dataset:HANDLE, INPUT BUFFER o_gsc_deploy_dataset:HANDLE).

/* Standard bottom of DELETE trigger code */
{af/sup/aftrigendd.i}


/* Place any specific DELETE trigger customisations here */
