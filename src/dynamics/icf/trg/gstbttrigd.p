/*********************************************************************
* Copyright (C) 2005 by Progress Software Corporation. All rights    *
* reserved.  Prior versions of this work may contain portions        *
* contributed by participants of Possenet.                           *
*                                                                    *
*********************************************************************/

TRIGGER PROCEDURE FOR DELETE OF gst_batch_job .

/* Created automatically using ERwin ICF Trigger template db/af/erw/afercustrg.i
   Do not change manually. Customisations to triggers should be placed in separate
   include files pulled into the trigger. ICF auto generates write trigger custom
   include files. Delete or create customisation include files need to be created
   manually. Be sure to put the hook in ERwin directly so as not to have you changes
   overwritten.
   User defined Macro (UDP) Summary (case sensitive)
   gst_batch_job           Expands to full table name, e.g. gsm_user
   %TableFLA            Expands to table unique code, e.g. gsmus
   %TableObj            If blank or not defined expands to table_obj with no prefix (framework standard)
                        If defined, uses this field as the object field
                        If set to "none" then indicates table does not have an object field
   XYZ                  Do not define so we can compare against an empty string

   See docs for explanation of replication macros 
*/   

&SCOPED-DEFINE TRIGGER_TABLE gst_batch_job
&SCOPED-DEFINE TRIGGER_FLA gstbt
&SCOPED-DEFINE TRIGGER_OBJ batch_job_obj


DEFINE BUFFER lb_table FOR gst_batch_job.      /* Used for recursive relationships */
DEFINE BUFFER lb1_table FOR gst_batch_job.     /* Used for lock upgrades */

DEFINE BUFFER o_gst_batch_job FOR gst_batch_job.

/* Standard top of DELETE trigger code */
{af/sup/aftrigtopd.i}

  




/* Generated by ICF ERwin Template */
/* gst_batch_job  gst_extract_log ON PARENT DELETE SET NULL */

&IF DEFINED(lbe_extract_log) = 0 &THEN
  DEFINE BUFFER lbe_extract_log FOR gst_extract_log.
  &GLOBAL-DEFINE lbe_extract_log yes
&ENDIF
FOR EACH gst_extract_log NO-LOCK
   WHERE gst_extract_log.batch_job_obj = gst_batch_job.batch_job_obj
   ON STOP UNDO, RETURN ERROR "AF^104^gstbttrigd.p^update gst_extract_log":U:
    FIND FIRST lbe_extract_log EXCLUSIVE-LOCK
         WHERE ROWID(lbe_extract_log) = ROWID(gst_extract_log)
         NO-ERROR.
    IF AVAILABLE lbe_extract_log THEN
      DO:
        
        ASSIGN lbe_extract_log.batch_job_obj = 0 .
      END.
END.












/* Update Audit Log */
IF CAN-FIND(FIRST gsc_entity_mnemonic
            WHERE gsc_entity_mnemonic.entity_mnemonic = 'gstbt':U
              AND gsc_entity_mnemonic.auditing_enabled = YES) THEN
  RUN af/app/afauditlgp.p (INPUT "DELETE":U, INPUT "gstbt":U, INPUT BUFFER gst_batch_job:HANDLE, INPUT BUFFER o_gst_batch_job:HANDLE).

/* Standard bottom of DELETE trigger code */
{af/sup/aftrigendd.i}


/* Place any specific DELETE trigger customisations here */
