/*********************************************************************
* Copyright (C) 2000 by Progress Software Corporation. All rights    *
* reserved. Prior versions of this work may contain portions         *
* contributed by participants of Possenet.                           *
*               PSC                                                  *
*                                                                    *
*********************************************************************/

TRIGGER PROCEDURE FOR CREATE OF gsc_product_module .

/* Created automatically using ERwin ICF Trigger template db/af/erw/afercustrg.i
   Do not change manually. Customisations to triggers should be placed in separate
   include files pulled into the trigger. ICF auto generates write trigger custom
   include files. Delete or create customisation include files need to be created
   manually. Be sure to put the hook in ERwin directly so as not to have you changes
   overwritten.
   User defined Macro (UDP) Summary (case sensitive)
   gsc_product_module           Expands to full table name, e.g. gsm_user
   %TableFLA            Expands to table unique code, e.g. gsmus
   %TableObj            If blank or not defined expands to table_obj with no prefix (framework standard)
                        If defined, uses this field as the object field
                        If set to "none" then indicates table does not have an object field
   XYZ                  Do not define so we can compare against an empty string

   See docs for explanation of replication macros 
*/   

&SCOPED-DEFINE TRIGGER_TABLE gsc_product_module
&SCOPED-DEFINE TRIGGER_FLA gscpm
&SCOPED-DEFINE TRIGGER_OBJ product_module_obj


DEFINE BUFFER lb_table FOR gsc_product_module.      /* Used for recursive relationships */
DEFINE BUFFER lb1_table FOR gsc_product_module.     /* Used for lock upgrades */

DEFINE BUFFER o_gsc_product_module FOR gsc_product_module.

/* Standard top of CREATE trigger code */
{af/sup/aftrigtopc.i}

  



/* Generated by ICF ERwin Template */
/* gsc_product_module contains gsc_product_module ON CHILD INSERT SET NULL */

IF NOT(CAN-FIND(FIRST lb_table WHERE
    gsc_product_module.parent_product_module_obj = lb_table.product_module_obj)) THEN
  DO:
    
    ASSIGN gsc_product_module.parent_product_module_obj = 0 .
  END.


/* Generated by ICF ERwin Template */
/* gsc_product is made up of gsc_product_module ON CHILD INSERT RESTRICT */
IF 
    ( gsc_product_module.product_obj <> 0 ) THEN
  DO:
    IF NOT(CAN-FIND(FIRST gsc_product WHERE
        gsc_product_module.product_obj = gsc_product.product_obj)) THEN
        DO:
          /* Cannot create child because parent does not exist ! */
          ASSIGN lv-error = YES lv-errgrp = "AF ":U lv-errnum = 102 lv-include = "gsc_product_module|gsc_product":U.
          RUN error-message (lv-errgrp, lv-errnum, lv-include).
        END.
    
    
  END.






ASSIGN gsc_product_module.{&TRIGGER_OBJ} = getNextObj() NO-ERROR.
IF ERROR-STATUS:ERROR THEN 
DO:
    ASSIGN lv-error = YES lv-errgrp = "AF ":U lv-errnum = 31 lv-include = "gsc_product_module|the specified object number.  Please ensure your database sequences have been set correctly":U.
    RUN error-message (lv-errgrp, lv-errnum, lv-include).
END.







/* Update Audit Log */
IF CAN-FIND(FIRST gsc_entity_mnemonic
            WHERE gsc_entity_mnemonic.entity_mnemonic = 'gscpm':U
              AND gsc_entity_mnemonic.auditing_enabled = YES) THEN
  RUN af/app/afauditlgp.p (INPUT "CREATE":U, INPUT "gscpm":U, INPUT BUFFER gsc_product_module:HANDLE, INPUT BUFFER o_gsc_product_module:HANDLE).

/* Standard bottom of CREATE trigger code */
{af/sup/aftrigendc.i}


/* Place any specific CREATE trigger customisations here */
