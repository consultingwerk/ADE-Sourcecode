/*********************************************************************
* Copyright (C) 2000 by Progress Software Corporation. All rights    *
* reserved. Prior versions of this work may contain portions         *
* contributed by participants of Possenet.                           *
*               PSC                                                  *
*                                                                    *
*********************************************************************/

TRIGGER PROCEDURE FOR WRITE OF gst_context_scope OLD BUFFER o_gst_context_scope.

/* Created automatically using ERwin ICF Trigger template db/af/erw/afercustrg.i
   Do not change manually. Customisations to triggers should be placed in separate
   include files pulled into the trigger. ICF auto generates write trigger custom
   include files. Delete or create customisation include files need to be created
   manually. Be sure to put the hook in ERwin directly so as not to have you changes
   overwritten.
   User defined Macro (UDP) Summary (case sensitive)
   gst_context_scope           Expands to full table name, e.g. gsm_user
   %TableFLA            Expands to table unique code, e.g. gsmus
   %TableObj            If blank or not defined expands to table_obj with no prefix (framework standard)
                        If defined, uses this field as the object field
                        If set to "none" then indicates table does not have an object field
   XYZ                  Do not define so we can compare against an empty string

   See docs for explanation of replication macros 
*/   

&SCOPED-DEFINE TRIGGER_TABLE gst_context_scope
&SCOPED-DEFINE TRIGGER_FLA gstcs
&SCOPED-DEFINE TRIGGER_OBJ context_scope_obj


DEFINE BUFFER lb_table FOR gst_context_scope.      /* Used for recursive relationships */
DEFINE BUFFER lb1_table FOR gst_context_scope.     /* Used for lock upgrades */



/* Standard top of WRITE trigger code */
{af/sup/aftrigtopw.i}

/* properform fields if enabled for table */
IF CAN-FIND(FIRST gsc_entity_mnemonic
            WHERE gsc_entity_mnemonic.entity_mnemonic = 'gstcs':U
              AND gsc_entity_mnemonic.auto_properform_strings = YES) THEN
  RUN af/app/afpropfrmp.p (INPUT BUFFER gst_context_scope:HANDLE).
  



/* Generated by ICF ERwin Template */
/* gst_context_scope is the parent  scope for gst_context_scope ON CHILD UPDATE SET NULL */
IF NEW gst_context_scope OR  gst_context_scope.parent_context_scope_obj <> o_gst_context_scope.parent_context_scope_obj  THEN
  DO:
    
    IF NOT(CAN-FIND(FIRST lb_table WHERE
        gst_context_scope.parent_context_scope_obj = lb_table.context_scope_obj)) THEN DO:
        
        ASSIGN gst_context_scope.parent_context_scope_obj = 0 .
    END.
    
  END.

/* Generated by ICF ERwin Template */
/* gsm_user has gst_context_scope ON CHILD UPDATE SET NULL */
IF NEW gst_context_scope OR  gst_context_scope.user_obj <> o_gst_context_scope.user_obj  THEN
  DO:
    IF NOT(CAN-FIND(FIRST gsm_user WHERE
        gst_context_scope.user_obj = gsm_user.user_obj)) THEN DO:
        
        ASSIGN gst_context_scope.user_obj = 0 .
    END.
    
    
  END.

/* Generated by ICF ERwin Template */
/* gst_session has gst_context_scope ON CHILD UPDATE SET NULL */
IF NEW gst_context_scope OR  gst_context_scope.session_obj <> o_gst_context_scope.session_obj  THEN
  DO:
    IF NOT(CAN-FIND(FIRST gst_session WHERE
        gst_context_scope.session_obj = gst_session.session_obj)) THEN DO:
        
        ASSIGN gst_context_scope.session_obj = 0 .
    END.
    
    
  END.








IF NOT NEW gst_context_scope AND gst_context_scope.{&TRIGGER_OBJ} <> o_gst_context_scope.{&TRIGGER_OBJ} THEN
    DO:
        ASSIGN lv-error = YES lv-errgrp = "AF":U lv-errnum = 13 lv-include = "table object number":U.
        RUN error-message (lv-errgrp,lv-errnum,lv-include).
    END.

/* Customisations to WRITE trigger */
{icf/trg/gstcstrigw.i}



/* Update Audit Log */
IF CAN-FIND(FIRST gsc_entity_mnemonic
            WHERE gsc_entity_mnemonic.entity_mnemonic = 'gstcs':U
              AND gsc_entity_mnemonic.auditing_enabled = YES) THEN
  RUN af/app/afauditlgp.p (INPUT "WRITE":U, INPUT "gstcs":U, INPUT BUFFER gst_context_scope:HANDLE, INPUT BUFFER o_gst_context_scope:HANDLE).

/* Standard bottom of WRITE trigger code */
{af/sup/aftrigendw.i}



