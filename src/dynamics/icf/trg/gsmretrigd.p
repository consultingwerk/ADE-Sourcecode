/*********************************************************************
* Copyright (C) 2005 by Progress Software Corporation. All rights    *
* reserved.  Prior versions of this work may contain portions        *
* contributed by participants of Possenet.                           *
*                                                                    *
*********************************************************************/

TRIGGER PROCEDURE FOR DELETE OF gsm_reporting_tool .

/* Created automatically using ERwin ICF Trigger template db/af/erw/afercustrg.i
   Do not change manually. Customisations to triggers should be placed in separate
   include files pulled into the trigger. ICF auto generates write trigger custom
   include files. Delete or create customisation include files need to be created
   manually. Be sure to put the hook in ERwin directly so as not to have you changes
   overwritten.
   User defined Macro (UDP) Summary (case sensitive)
   gsm_reporting_tool           Expands to full table name, e.g. gsm_user
   %TableFLA            Expands to table unique code, e.g. gsmus
   %TableObj            If blank or not defined expands to table_obj with no prefix (framework standard)
                        If defined, uses this field as the object field
                        If set to "none" then indicates table does not have an object field
   XYZ                  Do not define so we can compare against an empty string

   See docs for explanation of replication macros 
*/   

&SCOPED-DEFINE TRIGGER_TABLE gsm_reporting_tool
&SCOPED-DEFINE TRIGGER_FLA gsmre
&SCOPED-DEFINE TRIGGER_OBJ reporting_tool_obj


DEFINE BUFFER lb_table FOR gsm_reporting_tool.      /* Used for recursive relationships */
DEFINE BUFFER lb1_table FOR gsm_reporting_tool.     /* Used for lock upgrades */

DEFINE BUFFER o_gsm_reporting_tool FOR gsm_reporting_tool.

/* Standard top of DELETE trigger code */
{af/sup/aftrigtopd.i}

  




/* Generated by ICF ERwin Template */
/* gsm_reporting_tool  gsm_report_format ON PARENT DELETE CASCADE */
&IF DEFINED(lbe_report_format) = 0 &THEN
  DEFINE BUFFER lbe_report_format FOR gsm_report_format.
  &GLOBAL-DEFINE lbe_report_format yes
&ENDIF
FOR EACH gsm_report_format NO-LOCK
   WHERE gsm_report_format.reporting_tool_obj = gsm_reporting_tool.reporting_tool_obj
   ON STOP UNDO, RETURN ERROR "AF^104^gsmretrigd.p^delete gsm_report_format":U:
    FIND FIRST lbe_report_format EXCLUSIVE-LOCK
         WHERE ROWID(lbe_report_format) = ROWID(gsm_report_format)
         NO-ERROR.
    IF AVAILABLE lbe_report_format THEN
      DO:
        {af/sup/afvalidtrg.i &action = "DELETE" &table = "lbe_report_format"}
      END.
END.














/* Update Audit Log */
IF CAN-FIND(FIRST gsc_entity_mnemonic
            WHERE gsc_entity_mnemonic.entity_mnemonic = 'gsmre':U
              AND gsc_entity_mnemonic.auditing_enabled = YES) THEN
  RUN af/app/afauditlgp.p (INPUT "DELETE":U, INPUT "gsmre":U, INPUT BUFFER gsm_reporting_tool:HANDLE, INPUT BUFFER o_gsm_reporting_tool:HANDLE).

/* Standard bottom of DELETE trigger code */
{af/sup/aftrigendd.i}


/* Place any specific DELETE trigger customisations here */
