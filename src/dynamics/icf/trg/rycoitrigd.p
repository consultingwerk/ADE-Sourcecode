/*********************************************************************
* Copyright (C) 2005 by Progress Software Corporation. All rights    *
* reserved.  Prior versions of this work may contain portions        *
* contributed by participants of Possenet.                           *
*                                                                    *
*********************************************************************/

TRIGGER PROCEDURE FOR DELETE OF ryc_object_instance .

/* Created automatically using ERwin ICF Trigger template db/af/erw/afercustrg.i
   Do not change manually. Customisations to triggers should be placed in separate
   include files pulled into the trigger. ICF auto generates write trigger custom
   include files. Delete or create customisation include files need to be created
   manually. Be sure to put the hook in ERwin directly so as not to have you changes
   overwritten.
   User defined Macro (UDP) Summary (case sensitive)
   ryc_object_instance           Expands to full table name, e.g. gsm_user
   %TableFLA            Expands to table unique code, e.g. gsmus
   %TableObj            If blank or not defined expands to table_obj with no prefix (framework standard)
                        If defined, uses this field as the object field
                        If set to "none" then indicates table does not have an object field
   XYZ                  Do not define so we can compare against an empty string

   See docs for explanation of replication macros 
*/   

&SCOPED-DEFINE TRIGGER_TABLE ryc_object_instance
&SCOPED-DEFINE TRIGGER_FLA rycoi
&SCOPED-DEFINE TRIGGER_OBJ object_instance_obj


DEFINE BUFFER lb_table FOR ryc_object_instance.      /* Used for recursive relationships */
DEFINE BUFFER lb1_table FOR ryc_object_instance.     /* Used for lock upgrades */

DEFINE BUFFER o_ryc_object_instance FOR ryc_object_instance.

/* Standard top of DELETE trigger code */
{af/sup/aftrigtopd.i}

  




/* Generated by ICF ERwin Template */
/* ryc_object_instance has ryc_ui_event ON PARENT DELETE CASCADE */
&IF DEFINED(lbe_ui_event) = 0 &THEN
  DEFINE BUFFER lbe_ui_event FOR ryc_ui_event.
  &GLOBAL-DEFINE lbe_ui_event yes
&ENDIF
FOR EACH ryc_ui_event NO-LOCK
   WHERE ryc_ui_event.object_instance_obj = ryc_object_instance.object_instance_obj
   ON STOP UNDO, RETURN ERROR "AF^104^rycoitrigd.p^delete ryc_ui_event":U:
    FIND FIRST lbe_ui_event EXCLUSIVE-LOCK
         WHERE ROWID(lbe_ui_event) = ROWID(ryc_ui_event)
         NO-ERROR.
    IF AVAILABLE lbe_ui_event THEN
      DO:
        {af/sup/afvalidtrg.i &action = "DELETE" &table = "lbe_ui_event"}
      END.
END.





/* Generated by ICF ERwin Template */
/* ryc_object_instance source ryc_smartlink ON PARENT DELETE CASCADE */
&IF DEFINED(lbe_smartlink) = 0 &THEN
  DEFINE BUFFER lbe_smartlink FOR ryc_smartlink.
  &GLOBAL-DEFINE lbe_smartlink yes
&ENDIF
FOR EACH ryc_smartlink NO-LOCK
   WHERE ryc_smartlink.source_object_instance_obj = ryc_object_instance.object_instance_obj
   ON STOP UNDO, RETURN ERROR "AF^104^rycoitrigd.p^delete ryc_smartlink":U:
    FIND FIRST lbe_smartlink EXCLUSIVE-LOCK
         WHERE ROWID(lbe_smartlink) = ROWID(ryc_smartlink)
         NO-ERROR.
    IF AVAILABLE lbe_smartlink THEN
      DO:
        {af/sup/afvalidtrg.i &action = "DELETE" &table = "lbe_smartlink"}
      END.
END.





/* Generated by ICF ERwin Template */
/* ryc_object_instance target ryc_smartlink ON PARENT DELETE CASCADE */
&IF DEFINED(lbe_smartlink) = 0 &THEN
  DEFINE BUFFER lbe_smartlink FOR ryc_smartlink.
  &GLOBAL-DEFINE lbe_smartlink yes
&ENDIF
FOR EACH ryc_smartlink NO-LOCK
   WHERE ryc_smartlink.target_object_instance_obj = ryc_object_instance.object_instance_obj
   ON STOP UNDO, RETURN ERROR "AF^104^rycoitrigd.p^delete ryc_smartlink":U:
    FIND FIRST lbe_smartlink EXCLUSIVE-LOCK
         WHERE ROWID(lbe_smartlink) = ROWID(ryc_smartlink)
         NO-ERROR.
    IF AVAILABLE lbe_smartlink THEN
      DO:
        {af/sup/afvalidtrg.i &action = "DELETE" &table = "lbe_smartlink"}
      END.
END.





/* Generated by ICF ERwin Template */
/* ryc_object_instance has ryc_attribute_value ON PARENT DELETE CASCADE */
&IF DEFINED(lbe_attribute_value) = 0 &THEN
  DEFINE BUFFER lbe_attribute_value FOR ryc_attribute_value.
  &GLOBAL-DEFINE lbe_attribute_value yes
&ENDIF
FOR EACH ryc_attribute_value NO-LOCK
   WHERE ryc_attribute_value.object_instance_obj = ryc_object_instance.object_instance_obj
   ON STOP UNDO, RETURN ERROR "AF^104^rycoitrigd.p^delete ryc_attribute_value":U:
    FIND FIRST lbe_attribute_value EXCLUSIVE-LOCK
         WHERE ROWID(lbe_attribute_value) = ROWID(ryc_attribute_value)
         NO-ERROR.
    IF AVAILABLE lbe_attribute_value THEN
      DO:
        {af/sup/afvalidtrg.i &action = "DELETE" &table = "lbe_attribute_value"}
      END.
END.














/* Update Audit Log */
IF CAN-FIND(FIRST gsc_entity_mnemonic
            WHERE gsc_entity_mnemonic.entity_mnemonic = 'rycoi':U
              AND gsc_entity_mnemonic.auditing_enabled = YES) THEN
  RUN af/app/afauditlgp.p (INPUT "DELETE":U, INPUT "rycoi":U, INPUT BUFFER ryc_object_instance:HANDLE, INPUT BUFFER o_ryc_object_instance:HANDLE).

/* Standard bottom of DELETE trigger code */
{af/sup/aftrigendd.i}


/* Place any specific DELETE trigger customisations here */
