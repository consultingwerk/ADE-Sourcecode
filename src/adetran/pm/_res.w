&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v8r12 GUI
/* Procedure Description
"_RES.W

Creates resource procedures for a TRANMAN2 project."
*/
&ANALYZE-RESUME
&Scoped-define WINDOW-NAME CURRENT-WINDOW
&Scoped-define FRAME-NAME Dialog-Frame
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS Dialog-Frame 
/*********************************************************************
* Copyright (C) 2000 by Progress Software Corporation. All rights    *
* reserved. Prior versions of this work may contain portions         *
* contributed by participants of Possenet.                           *
*                                                                    *
*********************************************************************/
/*

Procedure:    adetran/pm/_res.w
Author:       R. Ryan/G. Seidl
Created:      1/95 
Updated:      7/97 SLK Bug#97-04-30-022
                   SLK Bug#97-08-06-029
Purpose:      Dialog which allows the user to generate .rc files
Background:   This procedure is really a front-end to pm/_build.p
              which does most of the work in creating .rc files.
              It does solicit some important information:
              
                The environment file (usually the progress.ini)
                Display Type (G=Graphical, C=Character)
                Should image be used in .rc files (usually yes)
                   
Notes:        See comments in pm/_build.p for more background.
                           
Called by:    pm/_trans.p
Calls:        pm/_build.p (creates the actual .rc files)

*/

define output parameter pSettingsFile as char    no-undo.
define output parameter pOKPressed    as logical no-undo.
define output parameter pErrorStatus  as logical no-undo. 

{ adetran/pm/tranhelp.i } /* definitions for help context strings */  
/* Temporary files generated by _sort.w and _order.w.                */
/* If these are blank then the regular OpenQuery internal procedures */
/* are run, otherwise these will be run                              */
DEFINE SHARED VARIABLE TmpFl_PM_Ss AS CHARACTER NO-UNDO.
{adetran/pm/vsubset.i &NEW=" " &SHARED="SHARED"}
/* NOTE that the BUFFERs and QUERY are defined as NEW SHARED
 * because they are defined as SHARED in common/_sort.w
 */
DEFINE NEW SHARED BUFFER ThisSubsetList FOR bSubsetList.
DEFINE NEW SHARED QUERY  ThisSubsetList FOR ThisSubsetList SCROLLING.
DEFINE VARIABLE lOptionState  AS LOGICAL   NO-UNDO  INIT TRUE.
DEFINE VARIABLE iOrigHeight   AS INTEGER   NO-UNDO. /* Orig Window Height */
DEFINE VARIABLE iOrigWidth    AS INTEGER   NO-UNDO. /* Orig Window Width */
DEFINE VARIABLE hSubset       AS HANDLE    NO-UNDO. /* Subset Procedure Handle*/
define shared var ProjectDB      as char    no-undo.
define shared var _MainWindow    as handle  no-undo.
define shared var StopProcessing as logical no-undo.
define shared var _hMeter        as handle  no-undo.
define shared var _RCWarnings    as logical no-undo.

define var OKPressed   as logical no-undo.
define var Result      as logical no-undo.  
define var ThisMessage as char    no-undo.
define var ErrorStatus as logical no-undo.
define var i           as integer no-undo.
DEFINE VARIABLE cOrigTitle AS CHARACTER NO-UNDO.
   
DEFINE STREAM outSTREAM.
&IF LOOKUP("{&OPSYS}","MSDOS,WIN32":U) > 0 &THEN
    &SCOPED-DEFINE SLASH ~~~\
&ELSE
    &SCOPED-DEFINE SLASH /
&ENDIF

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE DIALOG-BOX
&Scoped-define DB-AWARE no

/* Name of first Frame and/or Browse and/or first Query                 */
&Scoped-define FRAME-NAME Dialog-Frame

/* Standard List Definitions                                            */
&Scoped-Define ENABLED-OBJECTS BtnOK EnvSource ProgressINI BtnFile ~
BtnCancel BtnHelp RegistryBaseKeyList Btn_Options RegistrySubKey ~
BtnFileFromReg ProgressINIFromReg DisplayType UseImages INILabel ~
DisplayTypeLabel Rect1 Rect2 
&Scoped-Define DISPLAYED-OBJECTS EnvSource ProgressINI RegistryBaseKeyList ~
RegistrySubKey ProgressINIFromReg DisplayType UseImages INILabel ~
DisplayTypeLabel 

/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* ***********************  Control Definitions  ********************** */

/* Define a dialog box                                                  */

/* Definitions of the field level widgets                               */
DEFINE BUTTON BtnCancel AUTO-END-KEY DEFAULT 
     LABEL "Cancel":L 
     SIZE 15 BY 1.14.

DEFINE BUTTON BtnFile 
     LABEL "Fi&les...":L 
     SIZE 15 BY 1.14.

DEFINE BUTTON BtnFileFromReg 
     LABEL "Fi&les...":L 
     SIZE 15 BY 1.14.

DEFINE BUTTON BtnHelp 
     LABEL "&Help":L 
     SIZE 15 BY 1.14.

DEFINE BUTTON BtnOK AUTO-GO DEFAULT 
     LABEL "OK":L 
     SIZE 15 BY 1.14.

DEFINE BUTTON Btn_Options 
     LABEL "Options >>" 
     SIZE 15 BY 1.14.

DEFINE VARIABLE RegistryBaseKeyList AS CHARACTER FORMAT "X(256)":U 
     LABEL "Base Key" 
     VIEW-AS COMBO-BOX INNER-LINES 5
     LIST-ITEMS "","HKEY_CURRENT_USER","HKEY_LOCAL_MACHINE","HKEY_USERS","HKEY_CLASSES_ROOT" 
     DROP-DOWN-LIST
     SIZE 32 BY 1 NO-UNDO.

DEFINE VARIABLE DisplayTypeLabel AS CHARACTER FORMAT "X(256)":U INITIAL "Display Type" 
      VIEW-AS TEXT 
     SIZE 27.2 BY .67 NO-UNDO.

DEFINE VARIABLE INILabel AS CHARACTER FORMAT "X(256)":U INITIAL "Registry / Environment File" 
      VIEW-AS TEXT 
     SIZE 27.2 BY .67.

DEFINE VARIABLE ProgressINI AS CHARACTER FORMAT "X(256)":U 
     VIEW-AS FILL-IN NATIVE 
     SIZE 32 BY 1.14 NO-UNDO.

DEFINE VARIABLE ProgressINIFromReg AS CHARACTER FORMAT "X(256)":U 
     LABEL "Save Into File" 
     VIEW-AS FILL-IN NATIVE 
     SIZE 32 BY 1.14 TOOLTIP ".INI file to store Registry Info" NO-UNDO.

DEFINE VARIABLE RegistrySubKey AS CHARACTER FORMAT "X(256)":U 
     LABEL "Sub-key" 
     VIEW-AS FILL-IN NATIVE 
     SIZE 32 BY 1.14 TOOLTIP "Registry Base Key" NO-UNDO.

DEFINE VARIABLE DisplayType AS CHARACTER INITIAL "G" 
     VIEW-AS RADIO-SET VERTICAL
     RADIO-BUTTONS 
          "&Graphical", "G":U,
"&Character", "C":U
     SIZE 22.2 BY 1.52 NO-UNDO.

DEFINE VARIABLE EnvSource AS CHARACTER INITIAL "F" 
     VIEW-AS RADIO-SET VERTICAL
     RADIO-BUTTONS 
          "Environment &File", "F":U,
"&Registry", "R":U
     SIZE 23 BY 1.86 NO-UNDO.

DEFINE RECTANGLE Rect1
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 74 BY 6.33.

DEFINE RECTANGLE Rect2
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 74 BY 2.19.

DEFINE VARIABLE UseImages AS LOGICAL INITIAL yes 
     LABEL "Use &Image Files" 
     VIEW-AS TOGGLE-BOX
     SIZE 33 BY .67 NO-UNDO.


/* ************************  Frame Definitions  *********************** */

DEFINE FRAME Dialog-Frame
     BtnOK AT ROW 1.48 COL 77
     EnvSource AT ROW 2.33 COL 3 NO-LABEL
     ProgressINI AT ROW 2.38 COL 27 NO-LABEL
     BtnFile AT ROW 2.48 COL 60
     BtnCancel AT ROW 2.67 COL 77
     BtnHelp AT ROW 3.86 COL 77
     RegistryBaseKeyList AT ROW 4.29 COL 25 COLON-ALIGNED
     Btn_Options AT ROW 5.05 COL 77
     RegistrySubKey AT ROW 5.38 COL 18
     BtnFileFromReg AT ROW 6.52 COL 60
     ProgressINIFromReg AT ROW 6.57 COL 12.8
     DisplayType AT ROW 8.67 COL 3.8 NO-LABEL
     UseImages AT ROW 8.86 COL 27
     INILabel AT ROW 1.24 COL 3.8 NO-LABEL
     DisplayTypeLabel AT ROW 7.95 COL 3.8 NO-LABEL
     Rect1 AT ROW 1.57 COL 2
     Rect2 AT ROW 8.19 COL 2
     SPACE(18.99) SKIP(0.09)
    WITH VIEW-AS DIALOG-BOX 
         SIDE-LABELS NO-UNDERLINE THREE-D  SCROLLABLE 
         FONT 4
         TITLE "Resources"
         DEFAULT-BUTTON BtnOK.


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: DIALOG-BOX
   Other Settings: COMPILE
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS



/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR DIALOG-BOX Dialog-Frame
                                                                        */
ASSIGN 
       FRAME Dialog-Frame:SCROLLABLE       = FALSE.

/* SETTINGS FOR FILL-IN DisplayTypeLabel IN FRAME Dialog-Frame
   ALIGN-L                                                              */
/* SETTINGS FOR FILL-IN INILabel IN FRAME Dialog-Frame
   ALIGN-L                                                              */
/* SETTINGS FOR FILL-IN ProgressINI IN FRAME Dialog-Frame
   ALIGN-L                                                              */
/* SETTINGS FOR FILL-IN ProgressINIFromReg IN FRAME Dialog-Frame
   ALIGN-L                                                              */
/* SETTINGS FOR FILL-IN RegistrySubKey IN FRAME Dialog-Frame
   ALIGN-L                                                              */
/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME

 



/* ************************  Control Triggers  ************************ */

&Scoped-define SELF-NAME Dialog-Frame
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL Dialog-Frame Dialog-Frame
ON WINDOW-CLOSE OF FRAME Dialog-Frame /* Resources */
DO:
 APPLY "END-ERROR":U TO SELF.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BtnFile
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BtnFile Dialog-Frame
ON CHOOSE OF BtnFile IN FRAME Dialog-Frame /* Files... */
DO: 
  DEFINE VARIABLE ProgressININame AS CHARACTER NO-UNDO.
  DEFINE VARIABLE OKPressed       AS LOGICAL   NO-UNDO.
  
  FIND FIRST xlatedb.xl_project NO-LOCK NO-ERROR.
  
  SYSTEM-DIALOG GET-FILE ProgressININame
     TITLE      "Environment Files" 
     FILTERS    "All *.INI (*.ini)"  "*.ini":u,
                "All Files (*.*)"    "*.*":u 
     MUST-EXIST
     USE-FILENAME
     INITIAL-DIR xlatedb.XL_Project.ApplDirectory
     UPDATE OKpressed.      

  IF OKpressed = TRUE THEN
    ProgressINI:screen-value = ProgressININame.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BtnFileFromReg
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BtnFileFromReg Dialog-Frame
ON CHOOSE OF BtnFileFromReg IN FRAME Dialog-Frame /* Files... */
DO: 
  DEFINE VARIABLE ProgressININame AS CHARACTER NO-UNDO.
  DEFINE VARIABLE OKPressed       AS LOGICAL   NO-UNDO.
  
  FIND FIRST xlatedb.xl_project NO-LOCK NO-ERROR.
  
  SYSTEM-DIALOG GET-FILE ProgressININame
     TITLE      "Environment Files" 
     FILTERS    "All *.INI (*.ini)"  "*.ini":u,
                "All Files (*.*)"    "*.*":u 
     MUST-EXIST
     USE-FILENAME
     INITIAL-DIR xlatedb.XL_Project.ApplDirectory
     UPDATE OKpressed.      

  IF OKpressed = TRUE THEN
    ProgressINIFromReg:screen-value = ProgressININame.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BtnHelp
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BtnHelp Dialog-Frame
ON CHOOSE OF BtnHelp IN FRAME Dialog-Frame /* Help */
or help of frame {&frame-name} do:
  run adecomm/_adehelp.p ("tran":u,"context":u,{&resources_dialog_box}, ?).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BtnOK
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BtnOK Dialog-Frame
ON CHOOSE OF BtnOK IN FRAME Dialog-Frame /* OK */
DO: 
  define var FileCount  as integer no-undo.
  define var TotalCount as integer no-undo.   
  define var DirName    as char    no-undo.
  define var Basename   as char    no-undo.    
  define var os-rc      as integer no-undo.

  DEFINE VARIABLE l-error       AS LOGICAL      NO-UNDO.
  DEFINE VARIABLE l-reqSection  AS CHARACTER    NO-UNDO.
  DEFINE VARIABLE l-iniToUse    AS CHARACTER    NO-UNDO.
 
  /*
  ** What about the progress ini? It has to exist - but does it?
  ** Only check if the progress ini file was specified/vs registry
  */
  IF envSource:SCREEN-VALUE = "F":U THEN
     apply "leave":u to ProgressINI in frame {&frame-name}.
  ELSE
  DO: /* Registry processing */
     IF RegistrySubKey:SCREEN-VALUE = "" THEN
     DO:
        ASSIGN ThisMessage = "You must enter a Registry Base Key.".
        RUN adecomm/_s-alert.p (input-output ErrorStatus, "i":u,"ok":u, ThisMessage). 
        APPLY "ENTRY":U TO RegistrySubKey.
        RETURN NO-APPLY.
     END.
     ELSE IF ProgressINIFromReg:SCREEN-VALUE = "" THEN
     DO:
        ASSIGN ThisMessage = "You must enter a Environment File to which the Registry Information should be saved.".
        RUN adecomm/_s-alert.p (input-output ErrorStatus, "i":u,"ok":u, ThisMessage). 
        APPLY "ENTRY":U TO ProgressINIFromReg.
        RETURN NO-APPLY.
     END.
     ELSE
     DO:
        ASSIGN
          l-reqSection = "Startup":U + CHR(4) 
                        + "fonts":U + CHR(4)
                        + "Colors":U.
        RUN adecomm/_reg2ini.p (INPUT RegistryBaseKeyList:SCREEN-VALUE
                                , INPUT RegistrySubKey:SCREEN-VALUE
                                , INPUT l-reqSection
                                , INPUT ProgressINIFromReg:SCREEN-VALUE
                                , OUTPUT l-error).
        IF l-error THEN RETURN NO-APPLY.
     END.
  END.
    
  /*
  ** warn the user about the need to connect to databases
  */
  ThisMessage = "Note: Before continuing, you must be connected to all databases which your application uses. Continue?".
  assign ErrorStatus = Yes.
  run adecomm/_s-alert.p (input-output ErrorStatus, "q":u,"yes-no":u, ThisMessage). 
  if not ErrorStatus then return no-apply.
    
  IF VALID-HANDLE(hSubset) THEN
  APPLY "CLOSE":U TO hSubset.

        
  find first xlatedb.XL_Project exclusive-lock no-error.
  ASSIGN 
    l-iniToUse = IF EnvSource:SCREEN-VALUE = "F":U THEN ProgressINI:SCREEN-VALUE
                                          ELSE ProgressINIFromReg:SCREEN-VALUE
    pSettingsFile                         = l-iniToUse
    xlatedb.XL_Project.SettingsFile       = l-iniToUse
    xlatedb.XL_Project.UseImages          = UseImages:checked 
    xlatedb.XL_Project.ResourcesGenerated = true.

  /* Modified to maintain Sequence/Instance IDs
   *  xlatedb.XL_Project.DisplayType    
   *       DisplayType CHR(4) Sequence_Num CHR(4) Instance_Number
   */ 
   IF NUM-ENTRIES(xlatedb.XL_Project.DisplayType,CHR(4)) > 1 THEN
   DO:
      ASSIGN xlatedb.XL_Project.DisplayType = DisplayType:SCREEN-VALUE 
        + CHR(4) + ENTRY(2, xlatedb.XL_Project.DisplayType, CHR(4))
        + CHR(4) + ENTRY(3, xlatedb.XL_Project.DisplayType, CHR(4)).
   END.
   ELSE 
      ASSIGN xlatedb.XL_Project.DisplayType = DisplayType:SCREEN-VALUE.
       
  if l-iniToUse <> "" then do: 
    run adecomm/_osprefx.p (l-iniToUse,output DirName, output BaseName).
    FILE-INFO:FILENAME = l-iniToUse.
    os-copy value(FILE-INFO:FULL-PATHNAME) value(xlatedb.XL_Project.RootDirectory + "{&SLASH}" + basename).
    assign os-rc = os-error.
    if os-rc NE 0 then 
    DO: 
        ASSIGN ThisMessage = "Application INI file could not be copied to the Project Directory." + CHR(10) + "OS Error #" + STRING(os-rc).
        RUN adecomm/_s-alert.p (INPUT-OUTPUT ErrorStatus, "e":u,"ok":u, ThisMessage). 
    unload l-iniToUse no-error.
    load l-iniToUse   no-error. 
    use l-iniToUse NO-ERROR.
  end. 
                                               
  frame {&frame-name}:hidden = true.
  run CreateResourceProcedures (output FileCount, output TotalCount).   
  IF NOT _RCWarnings THEN
  DO:
     ThisMessage = string(TotalCount) + " procedures were processed." +
                "^":u + string(FileCount) + " resource procedures were created.".
     run adecomm/_s-alert.p (input-output ErrorStatus, "i":u,"ok":u, ThisMessage). 
  END. /* do not suppress RC information */

  /*
  ** Final assigns
  */
  /* Save XL_Invalid */
  FOR EACH xlatedb.XL_Invalid: DELETE xlatedb.XL_Invalid. END.
  FOR EACH ThisSubsetList WHERE ThisSubsetList.Project = ProjectDB
                            AND ThisSubsetList.Active  = TRUE NO-LOCK:
     CREATE xlatedb.XL_Invalid.
     ASSIGN xlatedb.XL_Invalid.GlossaryName = ThisSubsetList.Directory
            xlatedb.XL_Invalid.TargetPhrase = ThisSubsetList.FileName.
  END.

  assign
    pOKPressed   = true
    pErrorStatus = ErrorStatus.
    
  IF l-iniToUse <> "" THEN 
    USE "" NO-ERROR. /* restore to orig INI */
    UNLOAD l-iniToUse NO-ERROR.
  END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME Btn_Options
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL Btn_Options Dialog-Frame
ON CHOOSE OF Btn_Options IN FRAME Dialog-Frame /* Options >> */
DO:
   IF lOptionState THEN
   DO:
      run adecomm/_setcurs.p("wait":U).

      /* Set to Option state and display the full dialog. */
      ASSIGN Btn_Options:LABEL = "<< &Options"
             lOptionState = NOT lOptionState.
      /* FRAME {&FRAME-NAME}:HEIGHT = <Full Height> is done in _subset.w */
      RUN VALUE("adetran/pm/_subset.w") PERSISTENT SET hSubset
               (  INPUT FRAME Dialog-Frame:HANDLE
                , INPUT THIS-PROCEDURE
               ).
      run adecomm/_setcurs.p("":U).
   END.
   ELSE
   DO:
      /* Display the shortened dialog */
      ASSIGN Btn_Options:LABEL = "&Options >>"
             lOptionState = NOT lOptionState.
      RUN shrinkDialog.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME DisplayType
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL DisplayType Dialog-Frame
ON VALUE-CHANGED OF DisplayType IN FRAME Dialog-Frame
DO:
  if self:screen-value = "C":u then assign
    UseImages:checked   = false
    UseImages:sensitive = false.
  else
    UseImages:sensitive = true.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME EnvSource
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL EnvSource Dialog-Frame
ON VALUE-CHANGED OF EnvSource IN FRAME Dialog-Frame
DO:
  IF SELF:SCREEN-VALUE = "F":u THEN
     ASSIGN
        BtnFile:SENSITIVE = TRUE
        ProgressINI:SENSITIVE = TRUE
        RegistryBaseKeyList:SENSITIVE = FALSE
        RegistrySubKey:SENSITIVE = FALSE
        ProgressINIFromReg:SENSITIVE = FALSE
        BtnFileFromReg:SENSITIVE = FALSE.
  ELSE
     ASSIGN
        BtnFile:SENSITIVE = FALSE
        ProgressINI:SENSITIVE = FALSE
        RegistryBaseKeyList:SENSITIVE = TRUE
        RegistrySubKey:SENSITIVE = TRUE
        ProgressINIFromReg:SENSITIVE = TRUE
        BtnFileFromReg:SENSITIVE = TRUE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME ProgressINI
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL ProgressINI Dialog-Frame
ON LEAVE OF ProgressINI IN FRAME Dialog-Frame
DO: 
  if ProgressINI:screen-value = ? or
     ProgressINI:screen-value = "" then return.
            
  file-info:filename = ProgressINI:screen-value.
  
  if file-info:full-pathname = ? then do:
    ThisMessage = ProgressINI:screen-value + "^does not exist or cannot be located.".
    run adecomm/_s-alert.p (input-output ErrorStatus, "w":u,"ok":u, ThisMessage). 
    ProgressINI:auto-zap = true.
    return no-apply.
  end.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK Dialog-Frame 


/* ***************************  Main Block  *************************** */

/* Parent the dialog-box to the ACTIVE-WINDOW, if there is no parent.   */
IF VALID-HANDLE(ACTIVE-WINDOW) AND FRAME {&FRAME-NAME}:PARENT eq ? THEN 
ASSIGN 
   FRAME {&FRAME-NAME}:PARENT = ACTIVE-WINDOW
   CURRENT-WINDOW = ACTIVE-WINDOW.

/* Remove HKEY_CURRENT_CONFIG and HKEY_CLASSES_ROOT if not Windows 95 */
IF "{&WINDOW-SYSTEM}" BEGINS "MS-WIN95" THEN
DO:
     RegistryBaseKeyList:List-Items = ',HKEY_CURRENT_USER,HKEY_LOCAL_MACHINE,HKEY_USERS,HKEY_CLASSES_ROOT,HKEY_CURRENT_CONFIG,HKEY_DYN_DATA'. 
END.

/* Now enable the interface and wait for the exit condition.            */
/* (NOTE: handle ERROR and END-KEY so cleanup code will always fire.    */
MAIN-BLOCK:
DO ON ERROR   UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK
   ON END-KEY UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK:


   FIND FIRST xlatedb.XL_Project NO-LOCK NO-ERROR.

   ASSIGN           
     cOrigTitle                    = FRAME {&FRAME-NAME}:TITLE
     sAppDir                       = xlatedb.XL_Project.ApplDirectory
     THIS-PROCEDURE:PRIVATE-DATA   = "RESOURCES":U
     INILabel:SCREEN-VALUE         = "Registry / Environment File"
     INILabel:WIDTH                = FONT-TABLE:GET-TEXT-WIDTH-CHARS (TRIM(INILabel:SCREEN-VALUE),4)
     DisplayTypeLabel:SCREEN-VALUE = "Display Type"
     DisplayTypeLabel:WIDTH        = FONT-TABLE:GET-TEXT-WIDTH-CHARS (TRIM(DisplayTypeLabel:SCREEN-VALUE),4)
     ProgressINI                   = IF xlatedb.XL_Project.SettingsFile <> ? AND 
                                        xlatedb.XL_Project.SettingsFile <> "":U THEN
                                       xlatedb.XL_Project.SettingsFile
                                     ELSE IF SEARCH("PROGRESS.INI":u) <> ?
                                       THEN SEARCH("PROGRESS.INI":u)
                                     ELSE
                                       ""   
     file-info:filename            = ProgressINI
     ProgressINI                   = IF FILE-INFO:FULL-PATHNAME <> ? THEN
                                       FILE-INFO:FULL-PATHNAME ELSE "" 
     ProgressINI:SCREEN-VALUE      = ProgressINI 
     ProgressINIFromReg:SCREEN-VALUE   = ProgressINI
     RegistryBaseKeyList:SCREEN-VALUE  = "HKEY_CURRENT_USER"
     RegistrySubKey:SCREEN-VALUE  = "Software\PSC\Progress\" + TRIM(PROVERSION)
     UseImages:SCREEN-VALUE        = STRING(UseImages)
     EnvSource:SCREEN-VALUE        = "F":U.
  /* Modified to maintain Sequence/Instance IDs
   *  xlatedb.XL_Project.DisplayType    
   *       DisplayType CHR(4) Sequence_Num CHR(4) Instance_Number
   */ 
   IF NUM-ENTRIES(xlatedb.XL_Project.DisplayType,CHR(4)) > 1 THEN
   DO:
      ASSIGN DisplayType:SCREEN-VALUE = 
         IF ENTRY(1, xlatedb.XL_Project.DisplayType, CHR(4)) <> ? THEN
            ENTRY(1, xlatedb.XL_Project.DisplayType, CHR(4))
         ELSE 
            "G":U.
   END.
   ELSE 
      ASSIGN DisplayType:SCREEN-VALUE = 
         IF xlatedb.XL_Project.DisplayType <> ? THEN
            xlatedb.XL_Project.DisplayType
         ELSE
            "G":U.
   ASSIGN
    iOrigHeight = FRAME {&FRAME-NAME}:VIRTUAL-HEIGHT-CHARS
    iOrigWidth  = FRAME {&FRAME-NAME}:VIRTUAL-WIDTH-CHARS.
  IF lSubset THEN RUN assignTitle.
  RUN Realize.
 
  IF envSource:SCREEN-VALUE = "F":U THEN
    ASSIGN ProgressINI:SENSITIVE = TRUE
           BtnFile:SENSITIVE = TRUE
           RegistryBaseKeyList:SENSITIVE = FALSE
           RegistrySubKey:SENSITIVE = FALSE
           BtnFileFromReg:SENSITIVE = FALSE
           ProgressINIFromReg:SENSITIVE = FALSE.
  ELSE
    ASSIGN ProgressINI:SENSITIVE = FALSE
           BtnFile:SENSITIVE = FALSE
           BtnFileFromReg:SENSITIVE = TRUE
           ProgressINIFromReg:SENSITIVE = TRUE
           RegistryBaseKeyList:SENSITIVE = TRUE
           RegistrySubKey:SENSITIVE = TRUE.

  IF DisplayType:SCREEN-VALUE = "C":U THEN
    ASSIGN UseImages:CHECKED   = FALSE
           UseImages:SENSITIVE = FALSE.
           
           
  WAIT-FOR GO OF FRAME {&FRAME-NAME} FOCUS RegistryBaseKeyList.
END.
RUN disable_UI.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIBe-CODE-BLOCK _PROCEDURE assignTitle Dialog-Frame 
PROCEDURE assignTitle :
   ASSIGN FRAME {&FRAME-NAME}:TITLE = IF lSubset THEN cOrigTitle + cSubset
                                      ELSE cOrigTitle.
END PROCEDURE.
   
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE CheckDirectory Dialog-Frame 
PROCEDURE CheckDirectory :
define input  parameter FName    as char    no-undo.
define output parameter pSuccess as logical no-undo init false.
define var errcode as integer no-undo.
define var DirName    AS CHARACTER NO-UNDO.
define var BaseName   AS CHARACTER NO-UNDO.

  run adecomm/_osprefx.p (input FName, output DirName, output BaseName).  

  assign file-info:filename = DirName
        pSuccess = True.
  if file-info:full-pathname = ? then
  do:
    RUN adecomm/_oscpath.p (INPUT DirName, OUTPUT errcode).
    ASSIGN psuccess = IF errcode NE 0 THEN FALSE ELSE TRUE.
  end. /* unknown path/file */   
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE CreateResourceProcedures Dialog-Frame 
PROCEDURE CreateResourceProcedures :
DEFINE OUTPUT PARAMETER FileCount AS INTEGER            NO-UNDO.
  DEFINE OUTPUT PARAMETER NumProcs  AS INTEGER            NO-UNDO.
   
  DEFINE VARIABLE RootDir        AS CHARACTER             NO-UNDO.
  DEFINE VARIABLE ThisFile       AS CHARACTER             NO-UNDO.
  DEFINE VARIABLE File_Name      AS CHARACTER             NO-UNDO.
  DEFINE VARIABLE ResourceFile   AS CHARACTER             NO-UNDO. 
  DEFINE VARIABLE Dir            AS CHARACTER             NO-UNDO. 
  DEFINE VARIABLE Dev            AS CHARACTER             NO-UNDO.
  DEFINE VARIABLE CurFile        AS CHARACTER             NO-UNDO.
  DEFINE VARIABLE FileCreated    AS LOGICAL               NO-UNDO.    
  DEFINE VARIABLE Success        AS LOGICAL               NO-UNDO.
  DEFINE VARIABLE iLoc           AS INTEGER               NO-UNDO.
    
  DO WITH FRAME {&FRAME-NAME}:
    FIND FIRST xlatedb.XL_Project NO-LOCK NO-ERROR.    
    
    ASSIGN RootDir  = xlatedb.XL_Project.RootDirectory
           NumProcs = xlatedb.XL_Project.NumberOfProcedures
           i        = 0.
    RUN Realize IN _hMeter ("Creating Resource Files...").
    
    ProcLoop:
    FOR EACH xlatedb.XL_Procedure EXCLUSIVE-LOCK:
      PROCESS EVENTS.
      IF StopProcessing THEN DO:
        RUN HideMe IN _hMeter.
        RETURN.
      END.     

      IF lSubset THEN 
      DO:
         FIND FIRST ThisSubsetList
           WHERE ThisSubsetList.Project   = ProjectDB
             AND ThisSubsetList.Directory = xlatedb.XL_Procedure.Directory
             AND (ThisSubsetList.FileName    = xlatedb.XL_Procedure.FileName
                  OR ThisSubsetList.FileName = cAllFiles)
             AND ThisSubsetList.Active = TRUE
           NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ThisSubsetList THEN NEXT ProcLoop.
      END.
             
      ASSIGN Dir       = IF xlatedb.XL_Procedure.Directory = ".":U THEN "":U
                         ELSE xlatedb.XL_Procedure.Directory
             File_Name = xlatedb.XL_Procedure.FileName.
      
      RUN adecomm/_osfmush.p
        (INPUT Dir , INPUT File_Name, OUTPUT ResourceFile).  
      RUN adecomm/_osfmush.p
        (INPUT RootDir , INPUT ResourceFile, OUTPUT ResourceFile).
      RUN adecomm/_osfmush.p
        (INPUT Dir , INPUT File_Name, OUTPUT ThisFile).  
      
      ASSIGN i            = i + 1
             iLoc         = R-INDEX(ResourceFile,".":U)
             ResourceFile = IF iLoc > 1 THEN SUBSTRING(ResourceFile,1,iLoc - 1,"CHARACTER":U)
                            ELSE ResourceFile
             ResourceFile = ResourceFile + ".rc":U.
        
      RUN CheckDirectory (ResourceFile, OUTPUT Success).
      IF NOT Success THEN RETURN.

      /* If the resource file already exists, delete it. */
      ASSIGN file-info:file-name = ResourceFile.
      IF FILE-INFO:FULL-PATHNAME <> ? THEN os-delete VALUE(FILE-INFO:FULL-PATHNAME).  
         
      RUN SetBar IN _hMeter (NumProcs, MAX(0, i - 1), ResourceFile).
      RUN adetran/pm/_build.p (ResourceFile, ThisFile, useimages:SCREEN-VALUE,
                               DisplayType:SCREEN-VALUE, OUTPUT FileCreated).

      IF COMPILER:ERROR AND NOT _RCWarnings THEN DO:
        ASSIGN ThisMessage = Compiler:filename +
           "^^Could not be analyzed successfully which may result in an incomplete resource procedure. Continue?"
               ErrorStatus = FALSE.
        RUN adecomm/_s-alert.p (INPUT-OUTPUT ErrorStatus, "q*":u,"ok-cancel":u, ThisMessage).  
        IF ErrorStatus = ? THEN DO:
          RUN HideMe IN _hMeter.
          RETURN.
        END. 
      END. /* IF compiler error and not warnings */

      IF FileCreated THEN DO:
        /* Test to see if the file really exists. */    
        ASSIGN file-info:filename = ResourceFile.
        IF FILE-INFO:FULL-PATHNAME <> ?
        THEN ASSIGN FileCount = FileCount + 1
                    xlatedb.XL_Procedure.ResourceFileGenerated = TRUE.  
        ELSE ASSIGN xlatedb.XL_Procedure.ResourceFileGenerated = FALSE.
      END. /* If created */
      ELSE ASSIGN xlatedb.XL_Procedure.ResourceFileGenerated = FALSE.        
    END.  /* For EACH Xlatedb.XL_Procedure  */
    RUN HideMe in _hMeter.
  END.  /* DO WITH FRAME */
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIBe-CODE-BLOCK _PROCEDURE crUpdDirFileList DIALOG-1 
PROCEDURE crUpdDirFileList :
   FOR EACH xlatedb.XL_Procedure BREAK BY xlatedb.XL_Procedure.Directory:
      IF FIRST-OF (xlatedb.XL_Procedure.Directory) THEN
      DO:
         FIND FIRST bSubsetList
            WHERE bSubsetList.Project   = ProjectDB
              AND bSubsetList.Directory = xlatedb.XL_Procedure.Directory
              AND bSubsetList.FileName  = cAllFiles
            NO-LOCK NO-ERROR.
         IF NOT AVAILABLE bSubsetList OR NOT bSubsetList.Active THEN
         DO:
            FIND FIRST bDirList 
               WHERE bDirList.Project   = ProjectDB
                 AND bDirList.Directory = xlatedb.XL_Procedure.Directory
               NO-LOCK NO-ERROR.
            IF NOT AVAILABLE bDirList THEN
            DO:
               CREATE bDirList.
               ASSIGN bDirList.Project   = ProjectDB
                      bDirList.Directory = xlatedb.XL_Procedure.Directory.
            END.
            ASSIGN bDirList.Active = TRUE.
         END.
      END.
   
      FIND FIRST bFileList
         WHERE bFileList.Project   = ProjectDB
           AND bFileList.Directory = xlatedb.XL_Procedure.Directory
           AND bFileList.FileName  = xlatedb.XL_Procedure.FileName
          NO-LOCK NO-ERROR.
      IF NOT AVAILABLE bFileList THEN 
      DO:
         CREATE bFileList.
         ASSIGN bFileList.Project   = ProjectDB
                bFileList.Directory = xlatedb.XL_Procedure.Directory
                bFileList.FileName  = xlatedb.XL_Procedure.FileName.
      END.
      /* If there is already an active subset listing for the individual file
       * or for the complete directory, then set the filename to not active */
      FIND FIRST bSubsetList 
         WHERE bSubsetList.Project   = ProjectDB
           AND bSubsetList.Directory = bFileList.Directory
           AND bSubsetList.Active    = yes
           AND (bSubsetList.FileName = cAllFiles OR
                bsubsetList.FileName = xlatedb.XL_Procedure.FileName)
         NO-LOCK NO-ERROR.
      ASSIGN bFileList.Active = NOT AVAILABLE bSubsetList.
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE crUpdSubsetList Dialog-Frame 
PROCEDURE crUpdSubsetList :
/* 
 */

/* *********
 * No need to do this.  The subset is loaded from the database upon
 * connection, and is maintained throughout the session.
 
   FIND FIRST xlatedb.XL_Invalid NO-ERROR.
   IF AVAILABLE xlatedb.XL_Invalid THEN
   DO:
      /* Note that we are storing the subset in the XL_Invalid table */
      FOR EACH xlatedb.XL_Invalid:
         FIND FIRST ThisSubsetList
           WHERE ThisSubsetList.Project   = ProjectDB
             AND ThisSubsetList.Directory = xlatedb.XL_Invalid.GLossaryName
             AND ThisSubsetList.FileName  = xlatedb.XL_Invalid.TargetPhrase
           EXCLUSIVE-LOCK NO-ERROR. 
         IF NOT AVAILABLE ThisSubsetList THEN
         DO:
            CREATE ThisSubsetList.
            ASSIGN ThisSubsetList.Project   = ProjectDB
                   ThisSubsetList.Directory = xlatedb.XL_Invalid.GLossaryName
                   ThisSubsetList.FileName  = xlatedb.XL_Invalid.TargetPhrase. 
         END.
         ThisSubsetList.Active = TRUE.
      END.
   END.
********* */
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI Dialog-Frame  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Hide all frames. */
  HIDE FRAME Dialog-Frame.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enlargeDialog Dialog-Frame 
PROCEDURE enlargeDialog :
DEFINE INPUT PARAMETER  p-iExtraHeight    AS INTEGER        NO-UNDO.
   DEFINE INPUT PARAMETER  p-iExtraWidth     AS INTEGER        NO-UNDO.
   DEFINE OUTPUT PARAMETER p-iRow            AS INTEGER        NO-UNDO.
   DEFINE OUTPUT PARAMETER p-iColumn         AS INTEGER        NO-UNDO.
  
   /* Since the subset frame will be a child to procedure's frame, 
    *    p-iRow should be 
    *    p-iColumn should be 1 
    */ 
   ASSIGN 
      p-iRow                           = FRAME Dialog-Frame:HEIGHT-CHARS - 0.1
      p-iColumn                        = 1
      FRAME Dialog-Frame:HEIGHT-CHARS  = FRAME Dialog-Frame:HEIGHT-CHARS +
                                         p-iExtraHeight + .5
      FRAME Dialog-Frame:WIDTH-CHARS   = 1 + MAX(FRAME Dialog-Frame:WIDTH-CHARS, p-iExtraWidth).
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE Realize Dialog-Frame 
PROCEDURE Realize :
ENABLE BtnOK BtnCancel BtnHelp Btn_Options WITH FRAME {&frame-name}.

  {&OPEN-BROWSERS-IN-QUERY-{&frame-name}}
  
  frame {&frame-name}:hidden = true.
  enable
    ProgressINI
    RegistryBaseKeyList
    RegistrySubKey
    EnvSource
    BtnFile
    DisplayType
    UseImages
    BtnOK
    BtnCancel
    BtnHelp
  with frame dialog-frame.
                                     
  frame {&frame-name}:hidden = false.
  run adecomm/_setcurs.p ("").
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE shrinkDialog Dialog-Frame 
PROCEDURE shrinkDialog :
IF VALID-HANDLE(hSubset) THEN
   RUN disable_UI IN hSubset.
   ASSIGN FRAME Dialog-Frame:HEIGHT-CHARS = iOrigHeight
          FRAME Dialog-Frame:WIDTH-CHARS  = iOrigWidth.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

