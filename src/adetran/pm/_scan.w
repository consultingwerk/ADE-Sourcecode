&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v8r12 GUI
&ANALYZE-RESUME
&Scoped-define WINDOW-NAME CURRENT-WINDOW
&Scoped-define FRAME-NAME DIALOG-1
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS DIALOG-1
/*********************************************************************
* Copyright (C) 2000 by Progress Software Corporation. All rights    *
* reserved. Prior versions of this work may contain portions         *
* contributed by participants of Possenet.                           *
*                                                                    *
*********************************************************************/
/*

Procedure:    adetran/pm/_scan.w
Author:       R. Ryan/F. Chang
Created:      1/95
Updated:      9/95
Purpose:      Dialog which allows the project manager to identify
              files in a directory that *might* have changed.
Background:   This is a very simple utility, that examines the directory
              and file headers to determine if these scenarios exist:

                 1. Have any procedures been added?
                 2. Has any existing procedure been modified since
                    the project snapshot took place (look for changes
                    in the update date)?
                 3. Has any existing procedure been modified since
                    the project snapshot took place (look for changes
                    in file size)?
                 4. Are there any procedure that are in XL_Procedures
                    but can no longer be found in the directory?  If
                    so should it be removed?  If this option is checked,
                    then that procedure is removed from XL_Procedures
                    and all references in XL_Instance, etc. are deleted.

             If any of these conditions has been checked and is met, then that
             procedure is marked in xlatedb.XL_Procedures.NeedsExtracting. Once
             marked, then an extract can take place against just those marked
             procedures. If new procedures are found in the directory that weren't
             part of the XL_Procedures table, these are are added.

Notes:       This procedure is really just a front-end to pm/_pmprocs.w which does
             all the work once the ok button has been pressed.

Called By:   pm/_pmprocs.w
Parameters:  Option1 (output/logical)   = Include any new procedure not found
             Option2 (output/logical)   = Update procedures with newer update date
             Option3 (output/logical)   = Update procedures with different file size
             Option4 (output/logical)   = Remove procedure no longer found
             OKPressed (output/logical) = OK was pressed

*/


{adetran/pm/tranhelp.i}
def output parameter Option1 as log.
def output parameter Option2 as log.
def output parameter Option3 as log.
def output parameter Option4 as log.
def output parameter OKPressed as log.

/* Temporary files generated by _sort.w and _order.w.                */
/* If these are blank then the regular OpenQuery internal procedures */
/* are run, otherwise these will be run                              */
DEFINE SHARED VARIABLE TmpFl_PM_Ss          AS CHARACTER                NO-UNDO.
{adetran/pm/vsubset.i &NEW=" " &SHARED="SHARED"}
/* NOTE that the BUFFERs and QUERY are defined as NEW SHARED
 * because they are defined as SHARED in common/_sort.w
 */
DEFINE NEW SHARED BUFFER ThisSubsetList         FOR bSubsetList.
DEFINE NEW SHARED QUERY  ThisSubsetList         FOR ThisSubsetList SCROLLING.
DEFINE VARIABLE lOptionState  AS LOGICAL   NO-UNDO  INIT TRUE.
DEFINE VARIABLE iOrigHeight   AS DECIMAL   NO-UNDO. /* Orig Window Height */
DEFINE VARIABLE iOrigWidth    AS DECIMAL   NO-UNDO. /* Orig Window Width */
DEFINE VARIABLE hSubset       AS HANDLE    NO-UNDO. /* Subset Procedure Handle*/
DEFINE VARIABLE cOrigTitle    AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE ProjectDB AS CHARACTER NO-UNDO.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE DIALOG-BOX
&Scoped-define DB-AWARE no

/* Name of first Frame and/or Browse and/or first Query                 */
&Scoped-define FRAME-NAME DIALOG-1

/* Standard List Definitions                                            */
&Scoped-Define ENABLED-OBJECTS BtnOK T1 BtnCancel T2 BtnHelp T3 T4 ~
Btn_Options OptionsLabel RECT-1
&Scoped-Define DISPLAYED-OBJECTS T1 T2 T3 T4 OptionsLabel

/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* ***********************  Control Definitions  ********************** */

/* Define a dialog box                                                  */

/* Definitions of the field level widgets                               */
DEFINE BUTTON BtnCancel AUTO-END-KEY
     LABEL "Cancel":L
     SIZE 15 BY 1.14.

DEFINE BUTTON BtnHelp
     LABEL "&Help":L
     SIZE 15 BY 1.14.

DEFINE BUTTON BtnOK AUTO-GO
     LABEL "OK":L
     SIZE 15 BY 1.14.

DEFINE BUTTON Btn_Options
     LABEL "Options >>"
     SIZE 15 BY 1.14.

DEFINE VARIABLE OptionsLabel AS CHARACTER FORMAT "X(256)":U INITIAL "Options"
      VIEW-AS TEXT
     SIZE 8.4 BY .67 NO-UNDO.

DEFINE RECTANGLE RECT-1
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL
     SIZE 74 BY 4.57.

DEFINE VARIABLE T1 AS LOGICAL INITIAL yes
     LABEL "Include Any &New Procedure":L
     VIEW-AS TOGGLE-BOX
     SIZE 63 BY .81 NO-UNDO.

DEFINE VARIABLE T2 AS LOGICAL INITIAL yes
     LABEL "Update Procedures With a More Recent &Date":L
     VIEW-AS TOGGLE-BOX
     SIZE 63 BY .81 NO-UNDO.

DEFINE VARIABLE T3 AS LOGICAL INITIAL no
     LABEL "Update Procedures With a  File &Size Change":L
     VIEW-AS TOGGLE-BOX
     SIZE 63 BY .81 NO-UNDO.

DEFINE VARIABLE T4 AS LOGICAL INITIAL yes
     LABEL "Remove Any Procedure No Longer &Found":L
     VIEW-AS TOGGLE-BOX
     SIZE 63 BY .81 NO-UNDO.


/* ************************  Frame Definitions  *********************** */

DEFINE FRAME DIALOG-1
     BtnOK AT ROW 1.48 COL 77
     T1 AT ROW 2 COL 4
     BtnCancel AT ROW 2.67 COL 77
     T2 AT ROW 3 COL 4
     BtnHelp AT ROW 3.86 COL 77
     T3 AT ROW 4 COL 4
     T4 AT ROW 5 COL 4
     Btn_Options AT ROW 5.05 COL 77
     OptionsLabel AT ROW 1.19 COL 4.4 NO-LABEL
     RECT-1 AT ROW 1.52 COL 1
     SPACE(19.39) SKIP(0.14)
    WITH VIEW-AS DIALOG-BOX KEEP-TAB-ORDER
         SIDE-LABELS NO-UNDERLINE THREE-D  SCROLLABLE
         FONT 4
         TITLE "File Scan":L
         DEFAULT-BUTTON BtnOK CANCEL-BUTTON BtnCancel
         ROW 2 COLUMN 3.


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: DIALOG-BOX
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS



/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR DIALOG-BOX DIALOG-1
                                                                        */
ASSIGN
       FRAME DIALOG-1:SCROLLABLE       = FALSE.

/* SETTINGS FOR FILL-IN OptionsLabel IN FRAME DIALOG-1
   ALIGN-L                                                              */
/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME





/* ************************  Control Triggers  ************************ */

&Scoped-define SELF-NAME BtnHelp
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BtnHelp DIALOG-1
ON CHOOSE OF BtnHelp IN FRAME DIALOG-1 /* Help */
OR HELP OF FRAME {&FRAME-NAME} DO:
  run adecomm/_adehelp.p ("tran":u,"context":u,{&file_scan_dialog_box}, ?).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BtnOK
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BtnOK DIALOG-1
ON CHOOSE OF BtnOK IN FRAME DIALOG-1 /* OK */
DO:
  IF VALID-HANDLE(hSubset) THEN
  APPLY "CLOSE":U TO hSubset.
  assign
    OKPressed  = true
    Option1    = T1:checked
    Option2    = T2:checked
    Option3    = T3:checked
    Option4    = T4:checked.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME Btn_Options
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL Btn_Options DIALOG-1
ON CHOOSE OF Btn_Options IN FRAME DIALOG-1 /* Options >> */
DO:
   IF lOptionState THEN
   DO:
      run adecomm/_setcurs.p("wait":U).

      /* Set to Option state and display the full dialog. */
      ASSIGN Btn_Options:LABEL = "<< &Options"
             lOptionState = NOT lOptionState.
      /* FRAME {&FRAME-NAME}:HEIGHT = <Full Height> is done in _subset.w */
      RUN VALUE("adetran/pm/_subset.w") PERSISTENT SET hSubset
               (  INPUT FRAME DIALOG-1:HANDLE
                , INPUT THIS-PROCEDURE
               ).

      run adecomm/_setcurs.p("":U).
   END.
   ELSE
   DO:
      /* Display the shortened dialog */
      ASSIGN Btn_Options:LABEL = "&Options >>"
             lOptionState = NOT lOptionState.
      RUN shrinkDialog.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK DIALOG-1


/* ***************************  Main Block  *************************** */

/* Parent the dialog-box to the ACTIVE-WINDOW, if there is no parent.   */
IF VALID-HANDLE(ACTIVE-WINDOW) AND FRAME {&FRAME-NAME}:PARENT eq ?
THEN
ASSIGN FRAME {&FRAME-NAME}:PARENT = ACTIVE-WINDOW
       CURRENT-WINDOW = ACTIVE-WINDOW.

/* Add Trigger to equate WINDOW-CLOSE to END-ERROR                      */
ON WINDOW-CLOSE OF FRAME {&FRAME-NAME} APPLY "END-ERROR":U TO SELF.

/* Now enable the interface and wait for the exit condition.            */
/* (NOTE: handle ERROR and END-KEY so cleanup code will always fire.    */
MAIN-BLOCK:
DO ON ERROR   UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK
   ON END-KEY UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK:

  FIND FIRST xlatedb.XL_Project NO-LOCK NO-ERROR.
  ASSIGN
    cOrigTitle                  = FRAME {&FRAME-NAME}:TITLE
    sAppDir                     = xlatedb.XL_Project.ApplDirectory
    THIS-PROCEDURE:PRIVATE-DATA = "SCAN":U
    OptionsLabel:SCREEN-VALUE = "Options"
    OptionsLabel:WIDTH        = FONT-TABLE:GET-TEXT-WIDTH-CHARS(OptionsLabel:SCREEN-VALUE,4)
    iOrigHeight = FRAME {&FRAME-NAME}:VIRTUAL-HEIGHT-CHARS
    iOrigWidth  = FRAME {&FRAME-NAME}:VIRTUAL-WIDTH-CHARS.

  IF lSubset THEN RUN assignTitle.
  RUN Enable_UI.

  WAIT-FOR GO OF FRAME {&FRAME-NAME}.
END.
RUN disable_UI.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIBe-CODE-BLOCK _PROCEDURE assignTitle DIALOG-1
PROCEDURE assignTitle :
   ASSIGN FRAME {&FRAME-NAME}:TITLE = IF lSubset THEN cOrigTitle + cSubset
                                      ELSE cOrigTitle.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI DIALOG-1  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Hide all frames. */
  HIDE FRAME DIALOG-1.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enable_UI DIALOG-1  _DEFAULT-ENABLE
PROCEDURE enable_UI :
/*------------------------------------------------------------------------------
  Purpose:     ENABLE the User Interface
  Parameters:  <none>
  Notes:       Here we display/view/enable the widgets in the
               user-interface.  In addition, OPEN all queries
               associated with each FRAME and BROWSE.
               These statements here are based on the "Other
               Settings" section of the widget Property Sheets.
------------------------------------------------------------------------------*/
  DISPLAY T1 T2 T3 T4 OptionsLabel
      WITH FRAME DIALOG-1.
  ENABLE BtnOK T1 BtnCancel T2 BtnHelp T3 T4 Btn_Options OptionsLabel RECT-1
      WITH FRAME DIALOG-1.
  {&OPEN-BROWSERS-IN-QUERY-DIALOG-1}
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enlargeDialog DIALOG-1
PROCEDURE enlargeDialog :
DEFINE INPUT PARAMETER  p-iExtraHeight    AS INTEGER        NO-UNDO.
   DEFINE INPUT PARAMETER  p-iExtraWidth     AS INTEGER        NO-UNDO.
   DEFINE OUTPUT PARAMETER p-iRow            AS INTEGER        NO-UNDO.
   DEFINE OUTPUT PARAMETER p-iColumn         AS INTEGER        NO-UNDO.

   /* Since the subset frame will be a child to procedure's frame,
    *    p-iRow should be
    *    p-iColumn should be 1
    */
   ASSIGN
      p-iRow                       = FRAME DIALOG-1:HEIGHT-CHARS - 0.1
      p-iColumn                    = 1
      FRAME DIALOG-1:HEIGHT-CHARS  = FRAME DIALOG-1:HEIGHT-CHARS +
                                     p-iExtraHeight + .5
      FRAME DIALOG-1:WIDTH-CHARS   = 1 +
         MAX(FRAME DIALOG-1:WIDTH-CHARS, p-iExtraWidth).
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIBe-CODE-BLOCK _PROCEDURE crUpdDirFileList DIALOG-1
PROCEDURE crUpdDirFileList :
   FOR EACH xlatedb.XL_Procedure BREAK BY xlatedb.XL_Procedure.Directory:
      IF FIRST-OF (xlatedb.XL_Procedure.Directory) THEN
      DO:
         FIND FIRST bSubsetList
            WHERE bSubsetList.Project   = ProjectDB
              AND bSubsetList.Directory = xlatedb.XL_Procedure.Directory
              AND bSubsetList.FileName  = cAllFiles
            NO-LOCK NO-ERROR.
         IF NOT AVAILABLE bSubsetList OR NOT bSubsetList.Active THEN
         DO:
            FIND FIRST bDirList
               WHERE bDirList.Project   = ProjectDB
                 AND bDirList.Directory = xlatedb.XL_Procedure.Directory
               NO-LOCK NO-ERROR.
            IF NOT AVAILABLE bDirList THEN
            DO:
               CREATE bDirList.
               ASSIGN bDirList.Project   = ProjectDB
                      bDirList.Directory = xlatedb.XL_Procedure.Directory.
            END.
            ASSIGN bDirList.Active = TRUE.
         END.
      END.

      FIND FIRST bFileList
         WHERE bFileList.Project   = ProjectDB
           AND bFileList.Directory = xlatedb.XL_Procedure.Directory
           AND bFileList.FileName  = xlatedb.XL_Procedure.FileName
          NO-LOCK NO-ERROR.
      IF NOT AVAILABLE bFileList THEN
      DO:
         CREATE bFileList.
         ASSIGN bFileList.Project   = ProjectDB
                bFileList.Directory = xlatedb.XL_Procedure.Directory
                bFileList.FileName  = xlatedb.XL_Procedure.FileName.
      END.
      /* If there is already an active subset listing for the individual file
       * or for the complete directory, then set the filename to not active */
      FIND FIRST bSubsetList
         WHERE bSubsetList.Project   = ProjectDB
           AND bSubsetList.Directory = bFileList.Directory
           AND bSubsetList.Active    = yes
           AND (bSubsetList.FileName = cAllFiles OR
                bsubsetList.FileName = xlatedb.XL_Procedure.FileName)
         NO-LOCK NO-ERROR.
      ASSIGN bFileList.Active = NOT AVAILABLE bSubsetList.
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE crUpdSubsetList DIALOG-1
PROCEDURE crUpdSubsetList :
/*
*/

/* *********
 * No need to do this.  The subset is loaded from the database upon
 * connection, and is maintained throughout the session.

FIND FIRST xlatedb.XL_Invalid NO-ERROR.
IF AVAILABLE xlatedb.XL_Invalid THEN
   DO:
      /* Note that we are storing the subset in the XL_Invalid table */
      FOR EACH xlatedb.XL_Invalid:
         FIND FIRST ThisSubsetList
           WHERE ThisSubsetList.Project   = ProjectDB
             AND ThisSubsetList.Directory = xlatedb.XL_Invalid.GLossaryName
             AND ThisSubsetList.FileName  = xlatedb.XL_Invalid.TargetPhrase
         NO-ERROR.
         IF NOT AVAILABLE ThisSubsetList THEN
         DO:
            CREATE ThisSubsetList.
            ASSIGN ThisSubsetList.Project   = ProjectDB
                   ThisSubsetList.Directory = xlatedb.XL_Invalid.GLossaryName
                   ThisSubsetList.FileName  = xlatedb.XL_Invalid.TargetPhrase.
         END.
         ASSIGN ThisSubsetList.Active = TRUE.
      END.
   END.
********* */
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE shrinkDialog DIALOG-1
PROCEDURE shrinkDialog :
   IF VALID-HANDLE(hSubset) THEN
   RUN disable_UI IN hSubset.
   ASSIGN FRAME DIALOG-1:HEIGHT-CHARS    = iOrigHeight
          FRAME DIALOG-1:WIDTH-CHARS     = iOrigWidth.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
