&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v9r12 GUI
&ANALYZE-RESUME
/* Connected Databases 
          kit              PROGRESS
*/
&Scoped-define WINDOW-NAME C-Win
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS C-Win 
/*********************************************************************
* Copyright (C) 2000 by Progress Software Corporation. All rights    *
* reserved. Prior versions of this work may contain portions         *
* contributed by participants of Possenet.                           *
*                                                                    *
*********************************************************************/
/*

FileName:    adetran/pm/_subset.w
Author:       SLK
Created:      5/99 
Purpose:      Expanded Dialog which allows the project manager to identify
              files for a subset
Background:   
Notes:       *** This file was originally created in the AppBuilder, but
             *** has since been edited outside of the AppBuilder and can
             *** no longer be maintained through the AppBuilder.  If you
             *** open this file in the AppBuilder and try to save it, it
             *** will not compile.  This file must be maintained through
             *** the Procedure Editor only.

Called By:   pm/_scan.w
Parameters:  p-hParentFrame (input/handle) = 
                                        
*/
/*          This .W file was created with the Progress AppBuilder.      */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */
DEFINE INPUT PARAMETER p-hParentFrame      AS HANDLE             NO-UNDO.
DEFINE INPUT PARAMETER p-hParentProc       AS HANDLE             NO-UNDO.

/* Temporary files generated by _sort.w and _order.w.                */
/* If these are blank then the regular OpenQuery internal procedures */
/* are run, otherwise these will be run                              */
DEFINE NEW SHARED VARIABLE TmpFl_PM_Ss          AS CHARACTER       NO-UNDO.
DEFINE NEW SHARED VARIABLE _hSort               AS HANDLE          NO-UNDO.
DEFINE     SHARED VARIABLE CurrentTool          AS CHARACTER       NO-UNDO.
DEFINE     SHARED VARIABLE Mode6                AS CHARACTER       NO-UNDO.

{adetran/pm/vsubset.i &NEW=" " &SHARED="SHARED"}
/* NOTE that the BUFFERs and QUERY are defined as NEW SHARED
 * because they are defined as SHARED in common/_sort.w
 */
DEFINE NEW SHARED BUFFER ThisSubsetList         FOR bSubsetList.
/*DEFINE NEW SHARED QUERY  ThisSubsetList         FOR ThisSubsetList SCROLLING.*/

/* Local Variable Definitions ---                                       */
{adetran/pm/tranhelp.i}
{adecomm/cbvar.i}
DEFINE VARIABLE cThisMessage    AS CHARACTER  NO-UNDO.
DEFINE VARIABLE iCnt            AS INTEGER    NO-UNDO.
DEFINE VARIABLE iCnt2           AS INTEGER    NO-UNDO.
DEFINE VARIABLE iStartRow       AS INTEGER    NO-UNDO.
DEFINE VARIABLE iStartColumn    AS INTEGER    NO-UNDO.
DEFINE VARIABLE fCurFilter      AS CHARACTER  NO-UNDO.
DEFINE VARIABLE lErrorStatus    AS LOGICAL    NO-UNDO.
DEFINE VARIABLE lTemp           AS LOGICAL    NO-UNDO.
DEFINE VARIABLE sCurFilter      AS CHARACTER  NO-UNDO.
DEFINE VARIABLE cur-record      AS ROWID      NO-UNDO.

DEFINE VARIABLE CurrentMode     AS INTEGER    INITIAL 6 NO-UNDO.

DEFINE SHARED VARIABLE ProjectDB AS CHARACTER NO-UNDO.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE Window
&Scoped-define DB-AWARE no

/* Name of first Frame and/or Browse and/or first Query                 */
&Scoped-define FRAME-NAME DEFAULT-FRAME
&Scoped-define BROWSE-NAME bDirList

/* Internal Tables (found by Frame, Query & Browse Queries)             */
&Scoped-define INTERNAL-TABLES bDirList bFileList ThisSubsetList

/* Definitions for BROWSE bDirList                                      */
&Scoped-define FIELDS-IN-QUERY-bDirList bDirList.Directory   
&Scoped-define ENABLED-FIELDS-IN-QUERY-bDirList   
&Scoped-define SELF-NAME bDirList
&Scoped-define OPEN-QUERY-bDirList OPEN QUERY {&SELF-NAME} FOR EACH bDirList WHERE bDirList.Project = ProjectDB AND bDirList.Active NO-LOCK.
&Scoped-define TABLES-IN-QUERY-bDirList bDirList
&Scoped-define FIRST-TABLE-IN-QUERY-bDirList bDirList


/* Definitions for BROWSE bFileList                                     */
&Scoped-define FIELDS-IN-QUERY-bFileList bFileList.FileName   
&Scoped-define ENABLED-FIELDS-IN-QUERY-bFileList   
&Scoped-define SELF-NAME bFileList
&Scoped-define OPEN-QUERY-bFileList OPEN QUERY {&SELF-NAME} FOR EACH bFileList WHERE bFileList.Project = ProjectDB AND bFileList.Active NO-LOCK.
&Scoped-define TABLES-IN-QUERY-bFileList bFileList
&Scoped-define FIRST-TABLE-IN-QUERY-bFileList bFileList


/* Definitions for BROWSE ThisSubsetList                                */
&Scoped-define FIELDS-IN-QUERY-ThisSubsetList ThisSubsetList.Directory ThisSubsetList.FileName   
&Scoped-define ENABLED-FIELDS-IN-QUERY-ThisSubsetList ThisSubsetList.Directory   
&Scoped-define ENABLED-TABLES-IN-QUERY-ThisSubsetList ThisSubsetList
&Scoped-define FIRST-ENABLED-TABLE-IN-QUERY-ThisSubsetList ThisSubsetList
&Scoped-define SELF-NAME ThisSubsetList
&Scoped-define OPEN-QUERY-ThisSubsetList OPEN QUERY {&SELF-NAME} FOR EACH ThisSubsetList WHERE ThisSubsetList.Project = ProjectDB AND ThisSubsetList.Active NO-LOCK.
&Scoped-define TABLES-IN-QUERY-ThisSubsetList ThisSubsetList
&Scoped-define FIRST-TABLE-IN-QUERY-ThisSubsetList ThisSubsetList


/* Definitions for FRAME DEFAULT-FRAME                                  */
&Scoped-define OPEN-BROWSERS-IN-QUERY-DEFAULT-FRAME ~
    ~{&OPEN-QUERY-bDirList}~
    ~{&OPEN-QUERY-bFileList}~
    ~{&OPEN-QUERY-ThisSubsetList}

/* Standard List Definitions                                            */
&Scoped-Define ENABLED-OBJECTS togSubset fWildCardExpr fFiltBtn ~
fFiltersList bDirList bFileList Btn_AddDir Btn_AddFile sWildCardExpr ~
sFiltBtn Btn_SortSubset ThisSubsetList Btn_RemoveSubset RECT-3 RECT-4 ~
RECT-5 RECT-6 RECT-7 RECT-8 
&Scoped-Define DISPLAYED-OBJECTS togSubset fWildCardExpr fFiltersList ~
sWildCardExpr 

/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* ***********************  Control Definitions  ********************** */

/* Define the widget handle for the window                              */
DEFINE VAR C-Win AS WIDGET-HANDLE NO-UNDO.

/* Definitions of the field level widgets                               */
DEFINE BUTTON Btn_AddDir 
     LABEL "Add Directory" 
     SIZE 15 BY 1.38.

DEFINE BUTTON Btn_AddFile 
     LABEL "Add File" 
     SIZE 15 BY 1.38.

DEFINE BUTTON Btn_RemoveSubset 
     LABEL "&Remove" 
     SIZE 15 BY 1.14.

DEFINE BUTTON Btn_SortSubset 
     LABEL "&Sort..." 
     SIZE 15 BY 1.14.

DEFINE BUTTON fFiltBtn 
     IMAGE-UP FILE "btn-down-arrow":U
     LABEL "FiltBtn" 
     SIZE 4 BY 1.1.

DEFINE BUTTON sFiltBtn 
     IMAGE-UP FILE "btn-down-arrow":U
     LABEL "FiltBtn" 
     SIZE 4.2 BY 1.1.

DEFINE VARIABLE fSourceDirectory AS CHARACTER 
     VIEW-AS EDITOR
     SIZE 42 BY .95 NO-UNDO.

DEFINE VARIABLE fWildCardExpr AS CHARACTER FORMAT "X(250)":U 
     VIEW-AS FILL-IN 
     SIZE 37.4 BY 1.1 NO-UNDO.

DEFINE VARIABLE sWildCardExpr AS CHARACTER FORMAT "X(250)":U 
     VIEW-AS FILL-IN 
     SIZE 38.4 BY 1.1 NO-UNDO.

DEFINE RECTANGLE RECT-3
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 45 BY 9.05.

DEFINE RECTANGLE RECT-4
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 90 BY 10.71.

DEFINE RECTANGLE RECT-5
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 90 BY .24.

DEFINE RECTANGLE RECT-6
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 44 BY 9.05.

DEFINE RECTANGLE RECT-7
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 92 BY 21.91.

DEFINE RECTANGLE RECT-8
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 92 BY .24.

DEFINE VARIABLE fFiltersList AS CHARACTER 
     VIEW-AS SELECTION-LIST SINGLE SCROLLBAR-VERTICAL 
     LIST-ITEMS "LIST-ITEM" 
     SIZE 40 BY 3.57 NO-UNDO.

DEFINE VARIABLE sFiltersList AS CHARACTER 
     VIEW-AS SELECTION-LIST SINGLE SCROLLBAR-VERTICAL 
     LIST-ITEMS "LIST-ITEM" 
     SIZE 41 BY 3.57 NO-UNDO.

DEFINE VARIABLE togSubset AS LOGICAL INITIAL no 
     LABEL "Subset" 
     VIEW-AS TOGGLE-BOX
     SIZE 41 BY .95 NO-UNDO.

/* Query definitions                                                    */
&ANALYZE-SUSPEND
DEFINE QUERY bDirList FOR 
      bDirList SCROLLING.

DEFINE QUERY bFileList FOR 
      bFileList SCROLLING.

DEFINE QUERY ThisSubsetList FOR 
      ThisSubsetList SCROLLING.
&ANALYZE-RESUME

/* Browse definitions                                                   */
DEFINE BROWSE bDirList
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS bDirList C-Win _FREEFORM
  QUERY bDirList NO-LOCK DISPLAY
      bDirList.Directory FORMAT "x(255)"
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
    WITH NO-COLUMN-SCROLLING SEPARATORS MULTIPLE SIZE 42 BY 5
         FONT 4 ROW-HEIGHT-CHARS .6.

DEFINE BROWSE bFileList
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS bFileList C-Win _FREEFORM
  QUERY bFileList NO-LOCK DISPLAY
      bFileList.FileName COLUMN-LABEL "File Name" FORMAT "x(255)"
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
    WITH NO-COLUMN-SCROLLING SEPARATORS MULTIPLE SIZE 40 BY 5
         FONT 4 ROW-HEIGHT-CHARS .6.

DEFINE BROWSE ThisSubsetList
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS ThisSubsetList C-Win _FREEFORM
  QUERY ThisSubsetList NO-LOCK DISPLAY
      ThisSubsetList.Directory WIDTH 40 FORMAT "x(255)"
      ThisSubsetList.FileName  COLUMN-LABEL "File Name" FORMAT "x(255)"
ENABLE ThisSubsetList.Directory
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
    WITH NO-COLUMN-SCROLLING SEPARATORS MULTIPLE SIZE 69 BY 7.19
         FONT 4 ROW-HEIGHT-CHARS .6.


/* ************************  Frame Definitions  *********************** */

DEFINE FRAME DEFAULT-FRAME
     togSubset AT ROW 1.95 COL 3
     fWildCardExpr AT ROW 3.95 COL 49 COLON-ALIGNED NO-LABEL
     fFiltBtn AT ROW 3.95 COL 87
     fSourceDirectory AT ROW 4.05 COL 4 NO-LABEL
     fFiltersList AT ROW 5.05 COL 51 NO-LABEL
     bDirList AT ROW 5.14 COL 4
     bFileList AT ROW 5.14 COL 51
     Btn_AddDir AT ROW 10.33 COL 16
     Btn_AddFile AT ROW 10.33 COL 65
     sWildCardExpr AT ROW 13.67 COL 48 COLON-ALIGNED NO-LABEL
     sFiltBtn AT ROW 13.67 COL 86.8
     sFiltersList AT ROW 14.71 COL 50 NO-LABEL
     Btn_SortSubset AT ROW 15.24 COL 76
     ThisSubsetList AT ROW 15.33 COL 5
     Btn_RemoveSubset AT ROW 16.43 COL 76
     RECT-3 AT ROW 2.91 COL 3
     RECT-4 AT ROW 12.67 COL 3
     RECT-5 AT ROW 12.19 COL 3
     RECT-6 AT ROW 2.91 COL 49
     RECT-7 AT ROW 1.71 COL 2
     RECT-8 AT ROW 1.24 COL 2
     "Directories/Files in Subset:" VIEW-AS TEXT
          SIZE 38 BY .62 AT ROW 14.38 COL 5
     "List Files Of &Type:" VIEW-AS TEXT
          SIZE 31 BY .62 AT ROW 3.19 COL 51
     "List Files Of &Type:" VIEW-AS TEXT
          SIZE 22 BY .62 AT ROW 12.91 COL 50
     "Source Directory:" VIEW-AS TEXT
          SIZE 38 BY .62 AT ROW 3.19 COL 4
    WITH 1 DOWN NO-BOX KEEP-TAB-ORDER OVERLAY 
         SIDE-LABELS NO-UNDERLINE THREE-D 
         AT COL 1 ROW 1
         SIZE 94.2 BY 23.76.


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: Window
   Allow: Basic,Browse,DB-Fields,Window,Query
   Other Settings: COMPILE
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* SUPPRESS Window definition (used by the UIB) 
IF SESSION:DISPLAY-TYPE = "GUI":U THEN
  CREATE WINDOW C-Win ASSIGN
         HIDDEN             = YES
         TITLE              = "<insert window title>"
         HEIGHT             = 24.1
         WIDTH              = 95.4
         MAX-HEIGHT         = 31.95
         MAX-WIDTH          = 192
         VIRTUAL-HEIGHT     = 31.95
         VIRTUAL-WIDTH      = 192
         RESIZE             = yes
         SCROLL-BARS        = no
         STATUS-AREA        = no
         BGCOLOR            = ?
         FGCOLOR            = ?
         KEEP-FRAME-Z-ORDER = yes
         THREE-D            = yes
         MESSAGE-AREA       = no
         SENSITIVE          = yes.
ELSE {&WINDOW-NAME} = CURRENT-WINDOW.
                                                                        */
/* END WINDOW DEFINITION                                                */
&ANALYZE-RESUME
ASSIGN C-Win = CURRENT-WINDOW.




/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW C-Win
  VISIBLE,,RUN-PERSISTENT                                               */
/* SETTINGS FOR FRAME DEFAULT-FRAME
                                                                        */
/* BROWSE-TAB bDirList fFiltersList DEFAULT-FRAME */
/* BROWSE-TAB bFileList bDirList DEFAULT-FRAME */
/* BROWSE-TAB ThisSubsetList Btn_SortSubset DEFAULT-FRAME */
/* SETTINGS FOR EDITOR fSourceDirectory IN FRAME DEFAULT-FRAME
   NO-DISPLAY NO-ENABLE                                                 */
/* SETTINGS FOR SELECTION-LIST sFiltersList IN FRAME DEFAULT-FRAME
   NO-DISPLAY NO-ENABLE                                                 */
ASSIGN 
       sFiltersList:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK BROWSE bDirList
/* Query rebuild information for BROWSE bDirList
     _START_FREEFORM
OPEN QUERY {&SELF-NAME} FOR EACH bDirList WHERE bDirList.Project = ProjectDB AND bDirList.Active NO-LOCK.
     _END_FREEFORM
     _Options          = "NO-LOCK"
     _Query            is OPENED
*/  /* BROWSE bDirList */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _QUERY-BLOCK BROWSE bFileList
/* Query rebuild information for BROWSE bFileList
     _START_FREEFORM
OPEN QUERY {&SELF-NAME} FOR EACH bFileList WHERE bFileList.Project = ProjectDB AND bFileList.Active NO-LOCK.
     _END_FREEFORM
     _Options          = "NO-LOCK"
     _Query            is OPENED
*/  /* BROWSE bFileList */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _QUERY-BLOCK BROWSE ThisSubsetList
/* Query rebuild information for BROWSE ThisSubsetList
     _START_FREEFORM
OPEN QUERY {&SELF-NAME} FOR EACH ThisSubsetList WHERE ThisSubsetList.Project = ProjectDB AND ThisSubsetList.Active NO-LOCK.
     _END_FREEFORM
     _Options          = "NO-LOCK"
     _Query            is OPENED
*/  /* BROWSE ThisSubsetList */
&ANALYZE-RESUME

 



/* ************************  Control Triggers  ************************ */

&Scoped-define SELF-NAME C-Win
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL C-Win C-Win
ON END-ERROR OF C-Win /* <insert window title> */
OR ENDKEY OF {&WINDOW-NAME} ANYWHERE DO:
  /* This case occurs when the user presses the "Esc" key.
     In a persistently run window, just ignore this.  If we did not, the
     application would exit. */
  IF THIS-PROCEDURE:PERSISTENT THEN RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL C-Win C-Win
ON WINDOW-CLOSE OF C-Win /* <insert window title> */
DO:
  /* This event will close the window and terminate the procedure.  */
  APPLY "CLOSE":U TO THIS-PROCEDURE.
  RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define BROWSE-NAME bDirList
&Scoped-define SELF-NAME bDirList
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL bDirList C-Win
ON VALUE-CHANGED OF bDirList IN FRAME DEFAULT-FRAME
DO:                      
  RUN sensitize_UI.
  IF bDirList:NUM-SELECTED-ROWS = 1 THEN
  DO:
     RUN OpenQueryFileList.
     APPLY "VALUE-CHANGED":U TO bFileList IN FRAME {&FRAME-NAME}.
  END. /* Only one dir chosen */
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define BROWSE-NAME bFileList
&Scoped-define SELF-NAME bFileList
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL bFileList C-Win
ON VALUE-CHANGED OF bFileList IN FRAME DEFAULT-FRAME
DO:                      
  RUN sensitize_UI.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME Btn_AddDir
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL Btn_AddDir C-Win
ON CHOOSE OF Btn_AddDir IN FRAME DEFAULT-FRAME /* Add Directory */
DO:
  RUN adecomm/_setcurs.p ("WAIT":U).
  RUN addDirSubset. 
  RUN sensitize_UI.
  RUN adecomm/_setcurs.p ("":U).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME Btn_AddFile
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL Btn_AddFile C-Win
ON CHOOSE OF Btn_AddFile IN FRAME DEFAULT-FRAME /* Add File */
DO:
   RUN adecomm/_setcurs.p ("WAIT":U).
   RUN addFileSubset.
   RUN sensitize_UI.
   RUN adecomm/_setcurs.p ("":U).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME Btn_RemoveSubset
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL Btn_RemoveSubset C-Win
ON CHOOSE OF Btn_RemoveSubset IN FRAME DEFAULT-FRAME /* Remove */
DO:
   RUN adecomm/_setcurs.p ("WAIT":U).
   RUN deleteDirFileFromSubset.
   RUN sensitize_UI.
   RUN adecomm/_setcurs.p ("":U).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME Btn_SortSubset
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL Btn_SortSubset C-Win
ON CHOOSE OF Btn_SortSubset IN FRAME DEFAULT-FRAME /* Sort... */
DO:
   RUN adecomm/_setcurs.p ("WAIT":U).
   RUN sortSubsetList.
   RUN adecomm/_setcurs.p ("":U).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME fWildCardExpr
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL fWildCardExpr C-Win
ON VALUE-CHANGED OF fWildCardExpr IN FRAME DEFAULT-FRAME
DO:                      
  IF fCurFilter NE SELF:SCREEN-VALUE THEN DO:
    RUN OpenQueryFileList.
    APPLY "VALUE-CHANGED":U TO bFileList IN FRAME {&FRAME-NAME}.
    ASSIGN fCurFilter = SELF:SCREEN-VALUE.
  END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME sWildCardExpr
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL sWildCardExpr C-Win
ON VALUE-CHANGED OF sWildCardExpr IN FRAME DEFAULT-FRAME
DO:                      
  IF sCurFilter NE SELF:SCREEN-VALUE THEN DO:
    RUN OpenQuerySubsetList.
    APPLY "VALUE-CHANGED":U TO ThisSubsetList IN FRAME {&FRAME-NAME}.
    ASSIGN sCurFilter = SELF:SCREEN-VALUE.
  END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define BROWSE-NAME ThisSubsetList
&Scoped-define SELF-NAME ThisSubsetList
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL ThisSubsetList C-Win
ON VALUE-CHANGED OF ThisSubsetList IN FRAME DEFAULT-FRAME
DO:
  RUN sensitize_UI.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME togSubset
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL togSubset C-Win
ON VALUE-CHANGED OF togSubset IN FRAME DEFAULT-FRAME /* Subset */
DO:                      
  ASSIGN lSubset = IF togSubset:CHECKED THEN YES ELSE NO.
  RUN sensitize_UI.
  RUN assignTitle IN p-hParentProc.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define BROWSE-NAME bDirList
&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK C-Win 


/* ***************************  Main Block  *************************** */

/* Set CURRENT-WINDOW: this will parent dialog-boxes and frames.        */
ASSIGN CURRENT-WINDOW                = {&WINDOW-NAME} 
       THIS-PROCEDURE:CURRENT-WINDOW = {&WINDOW-NAME}.

/* The CLOSE event can be used from inside or outside the procedure to  */
/* terminate it.                                                        */
ON CLOSE OF THIS-PROCEDURE 
   RUN disable_UI.

/* Best default for GUI applications is...                              */
PAUSE 0 BEFORE-HIDE.

/* Now enable the interface and wait for the exit condition.            */
/* (NOTE: handle ERROR and END-KEY so cleanup code will always fire.    */
MAIN-BLOCK:
DO ON ERROR   UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK
   ON END-KEY UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK:

  ASSIGN FRAME DEFAULT-FRAME:FRAME     = p-hParentFrame
         fFiltersList:DELIMITER        = "|":U
         fFiltersList:LIST-ITEMS       = "*.p,*.w|*.p|*.w|*.*":U
         fCurFilter                    = "*.p,*.w":U
         sFiltersList:DELIMITER        = fFiltersList:DELIMITER
         sFiltersList:LIST-ITEMS       = fFiltersList:LIST-ITEMS
         sCurFilter                    = "*.*"
         fSourceDirectory:SCREEN-VALUE = sAppDir
         fSourceDirectory
         fSourceDirectory:READ-ONLY    = TRUE
         togSubset                     = lSubset
         togSubset:CHECKED             = lSubset
         .
ASSIGN ThisSubsetList.Directory:COLUMN-READ-ONLY = TRUE.         
   /* This is a "Laura" combo-box */
   {adecomm/cbdropx.i &Frame  = "FRAME DEFAULT-FRAME"
                      &CBFill = fWildCardExpr
                   &CBList = fFiltersList
                   &CBBtn  = fFiltBtn
                   &CBInit = """*.p,*.w""" }
   ON U1 OF fWildCardExpr IN FRAME {&FRAME-NAME},
           fFiltersList IN FRAME {&FRAME-NAME}  
   DO: /* Disallow "" in the combo box - reset to "*.p,*.w" */
     IF fWildCardExpr:SCREEN-VALUE IN FRAME {&FRAME-NAME} = "":U THEN
        fWildCardExpr:SCREEN-VALUE IN FRAME {&FRAME-NAME} = "*.p,*.w":U.
     RUN OpenQueryFileList.
   END.

   /* This is a "Laura" combo-box */
   {adecomm/cbdropx.i &Frame  = "FRAME DEFAULT-FRAME"
                   &CBFill = sWildCardExpr
                   &CBList = sFiltersList
                   &CBBtn  = sFiltBtn
                   &CBInit = """*.*""" }

  ON U1 OF sWildCardExpr IN FRAME {&FRAME-NAME},
           sFiltersList IN FRAME {&FRAME-NAME}  
  DO: /* Disallow "" in the combo box - reset to "*.*" */
     IF sWildCardExpr:SCREEN-VALUE IN FRAME {&FRAME-NAME} = "":U THEN
        sWildCardExpr:SCREEN-VALUE IN FRAME {&FRAME-NAME} = "*.*":U.
     RUN OpenQuerySubsetList.
  END.

  /* Load up the temp-tables and UI if necessary */
  RUN crUpdSubsetList.
  RUN crUpdDirFileList.
     
  /* enlarge the parent dialog */
  RUN enlargeDialog IN p-hParentProc 
     (  INPUT FRAME DEFAULT-FRAME:HEIGHT-CHARS
      , INPUT FRAME DEFAULT-FRAME:WIDTH-CHARS
      , OUTPUT iStartRow
      , OUTPUT iStartColumn).
  ASSIGN FRAME DEFAULT-FRAME:ROW     = iStartRow 
         FRAME DEFAULT-FRAME:COLUMN  = iStartColumn.

  RUN enable_UI.
  RUN sensitize_UI.

  IF NOT THIS-PROCEDURE:PERSISTENT THEN
    WAIT-FOR CLOSE OF THIS-PROCEDURE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE addDirSubset C-Win 
PROCEDURE addDirSubset :
/*------------------------------------------------------------------------------
  Purpose: AddDirSubset
           Adds a directory to the subset.
  Parameters: <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE VARIABLE iCnt                    AS INTEGER                      NO-UNDO.
DO WITH FRAME DEFAULT-FRAME:

   IF bDirList:NUM-SELECTED-ROWS = 0 THEN
   DO:
      cThisMessage = "You haven't selected a directory to add.".
      RUN adecomm/_s-alert.p (INPUT-OUTPUT lErrorStatus,
                              "w":U, "OK":U, cThisMessage).
      RETURN.
   END.

   RUN adecomm/_setcurs.p ("WAIT":U).
   ASSIGN 
      bDirList:REFRESHABLE       IN FRAME DEFAULT-FRAME = FALSE
      bFileList:REFRESHABLE      IN FRAME DEFAULT-FRAME = FALSE      
      ThisSubsetList:REFRESHABLE IN FRAME DEFAULT-FRAME = FALSE.
   
   DO iCnt = 1 TO bDirList:NUM-SELECTED-ROWS:
      ASSIGN lTemp = bDirList:FETCH-SELECTED-ROW(iCnt).
      FIND FIRST ThisSubsetList WHERE ThisSubsetList.Project   = ProjectDB
                                  AND ThisSubsetList.Directory = bDirList.Directory
                                  AND ThisSubsetList.FileName  = cAllFiles NO-ERROR.
      IF AVAILABLE ThisSubsetList THEN ThisSubsetList.Active = TRUE.
      ELSE
      DO:
         FOR EACH ThisSubsetList WHERE ThisSubsetList.Project   = ProjectDB
                                   AND ThisSubsetList.Directory = bDirList.Directory:
            ASSIGN ThisSubsetList.Active = FALSE.
         END.
      END.

      FOR EACH bFileList WHERE bFileList.Project   = ProjectDB
                           AND bFileList.Directory = bDirList.Directory:
         ASSIGN bFileList.Active = FALSE.
      END.

      FIND FIRST ThisSubsetList WHERE ThisSubsetList.Project   = ProjectDB
                                  AND ThisSubsetList.Directory = bDirList.Directory
                                  AND ThisSubsetList.FileName  = cAllFiles NO-ERROR.
      IF NOT AVAILABLE ThisSubsetList THEN 
      DO:
         CREATE ThisSubsetList.
         ASSIGN ThisSubsetList.Project   = ProjectDB
                ThisSubsetList.Directory = bDirList.Directory
                ThisSubsetList.FileName  = cAllFiles.
      END.
      ASSIGN bDirList.Active = FALSE
             ThisSubsetList.Active = TRUE.
   END. /* cycle through selected rows */
   
   ASSIGN lTemp = bDirList:DELETE-SELECTED-ROWS() NO-ERROR.
   {&OPEN-QUERY-ThisSubsetList}
   ASSIGN 
      bDirList:REFRESHABLE       IN FRAME DEFAULT-FRAME = TRUE
      bFileList:REFRESHABLE      IN FRAME DEFAULT-FRAME = TRUE
      ThisSubsetList:REFRESHABLE IN FRAME DEFAULT-FRAME = TRUE.
   RUN adecomm/_setcurs.p ("":U).
END. /* W/in FRAME */ 
END PROCEDURE. /* AddDirSubset */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE addFileSubset C-Win 
PROCEDURE addFileSubset :
/*------------------------------------------------------------------------------
  Purpose: AddFileSubset
           Adds a file to the subset.
  Parameters: <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE VARIABLE iCnt                    AS INTEGER                      NO-UNDO.

DO WITH FRAME DEFAULT-FRAME:
   IF bFileList:NUM-SELECTED-ROWS = 0 THEN
   DO:
      cThisMessage = "You haven't selected a filename to add.".
      RUN adecomm/_s-alert.p (INPUT-OUTPUT lErrorStatus,
                              "w":U, "OK":U, cThisMessage).
      RETURN.
   END.
 
   RUN adecomm/_setcurs.p ("WAIT":U).
   ASSIGN 
      bDirList:REFRESHABLE       IN FRAME DEFAULT-FRAME = FALSE
      bFileList:REFRESHABLE      IN FRAME DEFAULT-FRAME = FALSE
      ThisSubsetList:REFRESHABLE IN FRAME DEFAULT-FRAME = FALSE.
   
   DO iCnt = 1 TO bFileList:NUM-SELECTED-ROWS:
      ASSIGN lTemp = bFileList:FETCH-SELECTED-ROW(iCnt).
      FIND FIRST ThisSubsetList WHERE ThisSubsetList.Project   = ProjectDB
                                  AND ThisSubsetList.Directory = bFileList.Directory
                                  AND ThisSubsetList.FileName  = cAllFiles
                                  AND ThisSubsetList.Active    = TRUE NO-ERROR.
      IF AVAILABLE ThisSubsetList THEN .
      ELSE
      DO:
         FIND FIRST ThisSubsetList WHERE ThisSubsetList.Project   = ProjectDB
                                     AND ThisSubsetList.Directory = bFileList.Directory
                                     AND ThisSubsetList.FileName  = bFileList.FileName
         NO-ERROR.
         IF NOT AVAILABLE ThisSubsetList THEN
         DO:
            CREATE ThisSubsetList.
            ASSIGN ThisSubsetList.Project   = ProjectDB
                   ThisSubsetList.Directory = bFileList.Directory
                   ThisSubsetList.FileName  = bFileList.FileName.      
         END.
         ASSIGN ThisSubsetList.Active =  TRUE.
      END.
      ASSIGN bFileList.Active = FALSE.
   END. /* cycle through selected rows */
   
   ASSIGN lTemp = bFileList:DELETE-SELECTED-ROWS() NO-ERROR.
   {&OPEN-QUERY-ThisSubsetList}
   ASSIGN 
      bDirList:REFRESHABLE       IN FRAME DEFAULT-FRAME = TRUE
      bFileList:REFRESHABLE      IN FRAME DEFAULT-FRAME = TRUE
      ThisSubsetList:REFRESHABLE IN FRAME DEFAULT-FRAME = TRUE.
   RUN adecomm/_setcurs.p ("":U).  
 END. /* do with frame */
END PROCEDURE. /* AddFileSubset */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE crUpdDirFileList C-Win 
PROCEDURE crUpdDirFileList :
/*------------------------------------------------------------------------------
  Purpose: crUpdDirFileList
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
  DEFINE VARIABLE iCnt AS INTEGER NO-UNDO.

  DO WITH FRAME DEFAULT-FRAME:
    ASSIGN cur-record = ?.
    RUN crUpdDirFileList IN p-hParentProc.
  END. /* WITH FRAME {&DEFAULT-FRAME} */
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE crUpdSubsetList C-Win 
PROCEDURE crUpdSubsetList :
/*------------------------------------------------------------------------------
  Purpose: crUpdSubsetList    
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

  DO WITH FRAME DEFAULT-FRAME:
    RUN crUpdSubsetList IN p-hParentProc.
  END.
END PROCEDURE. /* loadSubset */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE deleteDirFileFromSubset C-Win 
PROCEDURE deleteDirFileFromSubset :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE VARIABLE iCnt                    AS INTEGER                    NO-UNDO.
DO WITH FRAME DEFAULT-FRAME:
   IF ThisSubsetList:NUM-SELECTED-ROWS = 0 THEN
   DO:
      cThisMessage = "You haven't selected a dir/procedure to remove.".
      RUN adecomm/_s-alert.p (INPUT-OUTPUT lErrorStatus,
                              "w":U, "OK":U, cThisMessage).
      RETURN.
   END.
   RUN adecomm/_setcurs.p ("WAIT":U).
   ASSIGN 
      bDirList:REFRESHABLE       IN FRAME DEFAULT-FRAME = FALSE
      bFileList:REFRESHABLE      IN FRAME DEFAULT-FRAME = FALSE      
      ThisSubsetList:REFRESHABLE IN FRAME DEFAULT-FRAME = FALSE.
   
   DO iCnt = 1 TO ThisSubsetList:NUM-SELECTED-ROWS:
      ASSIGN lTemp = ThisSubsetList:FETCH-SELECTED-ROW(iCnt).

      /* Remove All files from a directory */
      IF ThisSubsetList.FileName = cAllFiles THEN
      DO:
         FIND bDirList WHERE bDirList.Project   = ProjectDB
                         AND bDirList.Directory = ThisSubsetList.Directory NO-ERROR.
         IF AVAILABLE bDirList THEN bDirList.Active = TRUE. 
       
         FOR EACH bFileList WHERE bFileList.Project   = ProjectDB
                              AND bFileList.Directory = ThisSubsetList.Directory:
            ASSIGN bFilelist.Active = TRUE.
         END.
      END.
      ELSE /* Remove only file */
      DO:
         FIND FIRST bFileList WHERE bFileList.Project   = ProjectDB
                                AND bFileList.Directory = ThisSubsetList.Directory
                                AND bFileList.FileName  = ThisSubsetList.FileName
           NO-ERROR.
         IF AVAILABLE bFileList THEN ASSIGN bFileList.ACTIVE = TRUE.

         /* Make sure the corresponding directory listing is active */
         FIND bDirList WHERE bDirList.Project   = ProjectDB
                         AND bDirList.Directory = ThisSubsetList.Directory
           NO-ERROR.
         IF AVAILABLE bDirList THEN ASSIGN bDirList.ACTIVE = TRUE.
      END.
      ASSIGN ThisSubsetList.Active = FALSE.
   END. /* cycle through selected rows */
   
   ASSIGN lTemp = ThisSubsetList:DELETE-SELECTED-ROWS() NO-ERROR.
  {&OPEN-BROWSERS-IN-QUERY-DEFAULT-FRAME}

   ASSIGN 
      bDirList:REFRESHABLE       IN FRAME DEFAULT-FRAME = TRUE
      bFileList:REFRESHABLE      IN FRAME DEFAULT-FRAME = TRUE
      ThisSubsetList:REFRESHABLE IN FRAME DEFAULT-FRAME = TRUE.
   RUN adecomm/_setcurs.p ("":U).
END. /* W/in FRAME */ 
END PROCEDURE. /* deleteDirFileFromSubset */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE deleteDirList C-Win 
PROCEDURE deleteDirList :
/*------------------------------------------------------------------------------
  Purpose: delete all the records for this project in the bDirList temp table   
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   FOR EACH bDirList WHERE bDirList.Project = ProjectDB:
      DELETE bDirList.
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE deleteFileList C-Win 
PROCEDURE deleteFileList :
/*------------------------------------------------------------------------------
  Purpose: delete all the records for this project in the bFileList temp table   
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   FOR EACH bFileList WHERE bFileList.Project = ProjectDB:
      DELETE bFileList.
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE deleteSubsetList C-Win 
PROCEDURE deleteSubsetList :
/*------------------------------------------------------------------------------
  Purpose: deleteSubsetList   
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE INPUT PARAMETER cDirName     AS CHARACTER                               NO-UNDO.
DEFINE INPUT PARAMETER cFileName    AS CHARACTER                               NO-UNDO.

   IF cDirName <> "":U and cFileName <> "":U THEN
   DO:
      IF cDirName = cAllDirs AND cFileName = cAllFiles THEN
      DO:
          FOR EACH ThisSubsetList WHERE ThisSubsetList.Project = ProjectDB:
             DELETE ThisSubsetList.
          END.
      END.
      ELSE IF cFileName = cAllFiles THEN
      DO:
          FOR EACH ThisSubsetList WHERE ThisSubsetList.Project   = ProjectDB
                                    AND ThisSubsetList.Directory = cDirName:
             DELETE ThisSubsetList.
          END.
      END.
      ELSE 
      DO:
          FOR EACH ThisSubsetList WHERE ThisSubsetList.Project   = ProjectDB
                                    AND ThisSubsetList.Directory = cDirName
                                    AND ThisSubsetList.FileName  = cFileName:
             DELETE ThisSubsetList.
          END.
      END.
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI C-Win  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Hide all frames. */
  HIDE FRAME DEFAULT-FRAME.
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enable_UI C-Win  _DEFAULT-ENABLE
PROCEDURE enable_UI :
/*------------------------------------------------------------------------------
  Purpose:     ENABLE the User Interface
  Parameters:  <none>
  Notes:       Here we display/view/enable the widgets in the
               user-interface.  In addition, OPEN all queries
               associated with each FRAME and BROWSE.
               These statements here are based on the "Other 
               Settings" section of the widget Property Sheets.
------------------------------------------------------------------------------*/
  DISPLAY togSubset fWildCardExpr fFiltersList sWildCardExpr 
      WITH FRAME DEFAULT-FRAME.
  ENABLE togSubset fWildCardExpr fFiltBtn fFiltersList bDirList bFileList 
         Btn_AddDir Btn_AddFile sWildCardExpr sFiltBtn Btn_SortSubset 
         ThisSubsetList Btn_RemoveSubset RECT-3 RECT-4 RECT-5 RECT-6 RECT-7 
         RECT-8 
      WITH FRAME DEFAULT-FRAME.
  {&OPEN-BROWSERS-IN-QUERY-DEFAULT-FRAME}
  VIEW C-Win.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE getSWildCardExpr C-Win 
PROCEDURE getSWildCardExpr :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  INPUT-OUTPUT 
  Notes:       
------------------------------------------------------------------------------*/
DEFINE OUTPUT PARAMETER pWildCardExpr AS CHARACTER NO-UNDO.
   DO WITH FRAME {&FRAME-NAME}:
      ASSIGN pWildCardExpr = sWildCardExpr:SCREEN-VALUE.
   END. /* in Frame */
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE OpenQueryFileList C-Win 
PROCEDURE OpenQueryFileList :
DO WITH FRAME {&FRAME-NAME}:    
  DEFINE VARIABLE cLookupExp       AS CHARACTER EXTENT 4    NO-UNDO.
  DEFINE VARIABLE iMaxGuess        AS INTEGER               NO-UNDO.
  DEFINE VARIABLE lTemp            AS LOGICAL               NO-UNDO.
  DEFINE VARIABLE tmpFWildCardExpr AS CHARACTER             NO-UNDO.

  RUN adecomm/_setcurs.p ("WAIT":U).
  
  /* Need to replace . with ~~. for matching true . */
  ASSIGN fWildCardExpr
         tmpFWildCardExpr = REPLACE(fWildCardExpr, ".":U , "~~.":U).
  
  IF fFiltersList:LOOKUP(fWildCardExpr) = 0 THEN
    lTemp = fFiltersList:ADD-FIRST(fWildCardExpr).
  
  FOR EACH bFileList WHERE bFileList.Project = ProjectDB
                       AND bFileList.Active  = TRUE NO-LOCK:
    iMaxGuess = iMaxGuess + 1.
  END.
  /* Only one selected directory */
  IF bDirList:NUM-SELECTED-ROWS = 0 THEN 
     FIND FIRST bDirList WHERE bDirList.Project = ProjectDB
                           AND bDirList.Active  = TRUE NO-LOCK NO-ERROR.
  ELSE 
  ASSIGN lTemp = bDirList:FETCH-SELECTED-ROW(1).
      
  {adetran/common/oqryproc.i
       &WildCardExp             = fWildCardExpr
       &Lock                    = "SHARE-LOCK"
       &QueryName               = "bFileList"
       &DbTable                 = "bFileList"
       &DbFileFldName           = "bFileList.FileName"
       &AndWhereClause          = "AND bFileList.Project = ProjectDB AND bFileList.Active = TRUE AND bFileList.Directory = bDirList.Directory"
       &OrWhereClause          =  " "
       &ByStatement             = "BY bFileList.FileName"
  }

  IF iMaxGuess > 0 THEN
    bFileList:MAX-DATA-GUESS = iMaxGuess.

  RUN adecomm/_setcurs.p ("":U).

END. /* Frame  */
END PROCEDURE. /* OpenQueryFileList */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE OpenQuerySubsetList C-Win 
PROCEDURE OpenQuerySubsetList :
DO WITH FRAME {&FRAME-NAME}:    
  DEFINE VARIABLE cLookupExp      AS CHARACTER EXTENT 4    NO-UNDO.
  DEFINE VARIABLE iMaxGuess       AS INTEGER              NO-UNDO.
  DEFINE VARIABLE lTemp           AS LOGICAL               NO-UNDO.
  DEFINE VARIABLE tmpSWildCardExpr AS CHARACTER             NO-UNDO.

  RUN adecomm/_setcurs.p ("WAIT":U).
  
  /* Need to replace . with ~~. for matching true . */
  ASSIGN sWildCardExpr.
  
  IF sFiltersList:LOOKUP(sWildCardExpr) = 0 THEN
    lTemp = sFiltersList:ADD-FIRST(sWildCardExpr).

  DO:
     {adetran/common/oqryproc.i
       &WildCardExp             = sWildCardExpr
       &Lock                    = "SHARE-LOCK"
       &QueryName               = "ThisSubsetList"
       &DbTable                 = "ThisSubsetList"
       &DbFileFldName           = "ThisSubsetList.FileName"
       &AndWhereClause          = "AND ThisSubsetList.Project = ProjectDB AND ThisSubsetList.Active = TRUE"
       &OrWhereClause           =  " "
       &ByStatement             = "BY ThisSubsetList.FileName"
      }
  END.
  FIND FIRST ThisSubsetList WHERE ThisSubsetList.Project = ProjectDB 
                              AND ThisSubsetList.Active  = TRUE NO-ERROR.
  IF AVAILABLE ThisSubsetList THEN
  DO:
     FOR EACH bThisSubsetList WHERE bThisSubsetList.Project = ProjectDB
                                AND bThisSubsetList.Active  = TRUE NO-LOCK:
        iMaxGuess = iMaxGuess + 1.
     END.
     ThisSubsetList:MAX-DATA-GUESS = iMaxGuess.
  END.

  RUN adecomm/_setcurs.p ("":U).

END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE refreshSubsetScreen C-Win 
PROCEDURE refreshSubsetScreen :
/* Load up the temp-tables and UI if necessary */
  RUN crUpdSubsetList.
  RUN crUpdDirFileList.
  {&OPEN-BROWSERS-IN-QUERY-DEFAULT-FRAME}
  RUN sensitize_UI.
END PROCEDURE. /* refreshSubsetScreen */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE sensitize_UI C-Win 
PROCEDURE sensitize_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

DEFINE VARIABLE lDirExists            AS LOGICAL              NO-UNDO.
DEFINE VARIABLE lFileExists           AS LOGICAL              NO-UNDO.
DEFINE VARIABLE lSubsetExists         AS LOGICAL              NO-UNDO.
DEFINE VARIABLE iNumDirChosen         AS INTEGER              NO-UNDO.
DEFINE VARIABLE iNumFileChosen        AS INTEGER              NO-UNDO.
DEFINE VARIABLE iNumSubsetChosen      AS INTEGER              NO-UNDO.

   DO WITH FRAME {&FRAME-NAME}:

      IF NOT lSubset THEN 
      DO:
            ASSIGN
               /* Directory */
               bDirList:SENSITIVE         = FALSE 
               Btn_AddDir:SENSITIVE       = FALSE
               /* FileName */
               fWildCardExpr:SENSITIVE    = FALSE
               fFiltBtn:SENSITIVE         = FALSE
               bFileList:SENSITIVE        = FALSE
               Btn_AddFile:SENSITIVE      = FALSE
               /* Subset */
               sWildCardExpr:SENSITIVE    = FALSE
               sFiltBtn:SENSITIVE         = FALSE
               ThisSubsetList:SENSITIVE   = FALSE
               Btn_SortSubset:SENSITIVE   = FALSE
               Btn_RemoveSubset:SENSITIVE = FALSE
               bDirList:BGCOLOR            = 8
               bFileList:BGCOLOR           = 8
               ThisSubsetList:BGCOLOR      = 8.
      END.
      ELSE
      DO:
         ASSIGN
               bDirList:BGCOLOR            = ?
               bFileList:BGCOLOR           = ?
               ThisSubsetList:BGCOLOR      = ?.
         FIND FIRST bbDirList WHERE bbDirList.Project = ProjectDB
                                AND bbDirList.Active  = TRUE 
            NO-LOCK NO-ERROR.
         FIND FIRST bbFileList WHERE bbFileList.Project = ProjectDB
                                 AND bbFileList.Active  = TRUE 
            NO-LOCK NO-ERROR.
         FIND FIRST bThisSubsetList WHERE bThisSubsetList.Project = ProjectDB
                                      AND bThisSubsetList.Active  = TRUE 
            NO-LOCK NO-ERROR.
         
         ASSIGN 
            lDirExists       = AVAILABLE bbDirList
            lFileExists      = AVAILABLE bbFileList
            lSubsetExists    = AVAILABLE bThisSubsetList
            iNumDirChosen    = bDirList:NUM-SELECTED-ROWS
            iNumFileChosen   = bFileList:NUM-SELECTED-ROWS
            iNumSubsetChosen = ThisSubsetList:NUM-SELECTED-ROWS.
         
         /* ****************************************************************
          *
          * DIR/FILE   
          *
          * **************************************************************** */
         IF NOT lDirExists THEN
         DO: /* sensitive - nothing for dir and file */
                  ASSIGN
                     bDirList:SENSITIVE        = FALSE 
                     Btn_AddDir:SENSITIVE      = FALSE
   
                     fWildCardExpr:SENSITIVE   = FALSE
                     fFiltBtn:SENSITIVE        = FALSE
                     bFileList:SENSITIVE       = FALSE
                     Btn_AddFile:SENSITIVE     = FALSE.
         END.
         ELSE
         DO:
            IF iNumDirChosen = 0 THEN 
            DO: /* sensitive - nothing for dir and file */
                  ASSIGN
                     bDirList:SENSITIVE        = TRUE 
                     Btn_AddDir:SENSITIVE      = FALSE
   
                     fWildCardExpr:SENSITIVE   = FALSE
                     fFiltBtn:SENSITIVE        = FALSE
                     bFileList:SENSITIVE       = FALSE
                     Btn_AddFile:SENSITIVE     = FALSE.
            END. /* no directory record chosen */
            ELSE IF iNumDirChosen = 1 THEN
            DO: /* sensitive - Dir Add button, all but Btn_AddFile for file */
                  ASSIGN
                     bDirList:SENSITIVE        = TRUE 
                     Btn_AddDir:SENSITIVE      = TRUE
   
                     fWildCardExpr:SENSITIVE   = TRUE
                     fFiltBtn:SENSITIVE        = TRUE
                     bFileList:SENSITIVE       = TRUE
                     Btn_AddFile:SENSITIVE     = FALSE.
               IF lFileExists AND iNumFileChosen >= 1 THEN
               DO: /* sensitive - all file including Btn_AddFile */
                  ASSIGN
                     bDirList:SENSITIVE        = TRUE 
                     Btn_AddDir:SENSITIVE      = TRUE
   
                     fWildCardExpr:SENSITIVE   = TRUE
                     fFiltBtn:SENSITIVE        = TRUE
                     bFileList:SENSITIVE       = TRUE
                     Btn_AddFile:SENSITIVE     = TRUE.
               END. /* one directory chosen and files exist and chosen */
            END. /* one directory chosen */
            ELSE
            DO: /* sensitive - Dir Add button, nothing for file */
                  ASSIGN
                     bDirList:SENSITIVE        = TRUE 
                     Btn_AddDir:SENSITIVE      = TRUE
   
                     fWildCardExpr:SENSITIVE   = FALSE
                     fFiltBtn:SENSITIVE        = FALSE
                     bFileList:SENSITIVE       = FALSE
                     Btn_AddFile:SENSITIVE     = FALSE.
            END. /* many directories chosen */
         END. /* directories exist */
      
   
         /* ****************************************************************
          *
          * SUBSET   
          *
          * **************************************************************** */
         IF NOT lSubsetExists THEN
         DO: /* Nothing sensitive for subset */
            ASSIGN
               sWildCardExpr:SENSITIVE      = FALSE
               sFiltBtn:SENSITIVE           = FALSE
               ThisSubsetList:SENSITIVE     = FALSE
               Btn_SortSubset:SENSITIVE     = FALSE
               Btn_RemoveSubset:SENSITIVE   = FALSE.
         END. /* no sunset exists */
         ELSE
         DO: /* subset records exists */
            IF iNumSubsetChosen = 0 THEN
            DO: /* non subset records chosen */ 
               /* sensitive - all but remove */
               ASSIGN
                  sWildCardExpr:SENSITIVE      = TRUE
                  sFiltBtn:SENSITIVE           = TRUE
                  ThisSubsetList:SENSITIVE     = TRUE
                  Btn_SortSubset:SENSITIVE     = TRUE
                  Btn_RemoveSubset:SENSITIVE   = FALSE.
            END. /* no subset records chosen */
            ELSE
            DO: /* subset records chosen */
               /* sensitive = all */
               ASSIGN
                  sWildCardExpr:SENSITIVE      = TRUE
                  sFiltBtn:SENSITIVE           = TRUE
                  ThisSubsetList:SENSITIVE     = TRUE
                  Btn_SortSubset:SENSITIVE     = TRUE
                  Btn_RemoveSubset:SENSITIVE   = TRUE.
            END.  /* subset records chosen */
         END. /* subset exists */
      END. /* Subset Checked */
         
   END. /* in Frame */
END PROCEDURE. /* sensitize_UI */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE SortQuery C-Win 
PROCEDURE SortQuery :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

  DEFINE INPUT PARAMETER pTempFile AS CHARACTER                NO-UNDO. 
  DEFINE VARIABLE iCnt             AS INTEGER                  NO-UNDO. 

  IF pTempFile NE TmpFl_PM_Ss THEN DO:
    IF TmpFl_PM_Ss NE "" THEN OS-DELETE VALUE(TmpFl_PM_Ss).
    ASSIGN TmpFl_PM_Ss = pTempFile.
  END.

  IF VALID-HANDLE(_hSort) THEN DELETE PROCEDURE _hSort.  
  RUN VALUE(pTempFile) PERSISTENT SET _hSort. 
  IF VALID-HANDLE(_hSort) THEN _hSort:PRIVATE-DATA = CurrentTool.
  FIND FIRST ThisSubsetList WHERE ThisSubsetList.Project = ProjectDB
                              AND ThisSubsetList.Active  = TRUE NO-ERROR.
  IF AVAILABLE ThisSubsetList THEN
  DO:
     FOR EACH bThisSubsetList WHERE bThisSubsetList.Project = ProjectDB
                                AND bThisSubsetList.Active  = TRUE NO-LOCK:
        iCnt = iCnt + 1.
     END.
    ThisSubsetList:MAX-DATA-GUESS IN FRAME {&FRAME-NAME} = iCnt.
  END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE sortSubsetList C-Win 
PROCEDURE sortSubsetList :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   RUN adetran/common/_sort.w 
       (INPUT THIS-PROCEDURE, 
        INPUT CurrentMode, 
        INPUT CurrentTool).
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

